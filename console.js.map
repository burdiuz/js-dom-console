{"version":3,"file":"console.js","sources":["node_modules/@actualwave/get-class/get-class.js","node_modules/@actualwave/closure-value/closure-value.js","node_modules/@actualwave/log-data-renderer/index.js","source/utils.js","source/nested.js","source/dom.js","source/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n\n  const constructor = target.constructor;\n\n  if(\n    typeof constructor === 'function'\n    && target instanceof constructor\n  ) {\n    return target.constructor;\n  }\n\n  const proto = Object.getPrototypeOf(target);\n\n  if (proto && typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto || Object;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n\n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const valueClass = getClass(value);\n\n  return valueClass ? valueClass.name : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst singleValueFactory = (defaultValue = null, valueFormatter = (value) => value) => {\n  let value = defaultValue;\n\n  return {\n    getDefault: () => defaultValue,\n    get: () => value,\n    set: (newValue = defaultValue) => {\n      value = valueFormatter(newValue);\n    },\n  };\n};\n\nconst valuesMapFactory = (defaults = new Map(), valueFormatter = (key, value) => value) => {\n  const defaultValues = new Map(defaults);\n  const getDefault = () => new Map(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    copy: () => new Map(values),\n    delete: (key) => values.delete(key),\n    has: (key) => values.has(key),\n    set: (key, value) => values.set(key, valueFormatter(key, value)),\n    get: (key) => values.get(key),\n  };\n};\n\nconst valuesSetFactory = (defaults = new Set(), valueFormatter = (value) => value) => {\n  const defaultValues = new Set(defaults);\n  const getDefault = () => new Set(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    get: () => new Set(values),\n    delete: (value) => values.delete(value),\n    has: (value) => values.has(value),\n    add: (value) => values.add(valueFormatter(value)),\n  };\n};\n\nexports.singleValueFactory = singleValueFactory;\nexports.valuesMapFactory = valuesMapFactory;\nexports.valuesSetFactory = valuesSetFactory;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar getClass = require('@actualwave/get-class');\nvar getClass__default = _interopDefault(getClass);\nvar closureValue = require('@actualwave/closure-value');\n\n// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nconst MAX_FUNC_STR_LEN = 30;\nconst setCustomClassNameTo = (data, className) => data.className = className;\nconst getCustomClassNameFrom = data => data.className || '';\nconst canPassAsIs = value => typeof value === 'string';\nconst validKeyRgx = /^[\\w_$][\\w\\d_$]*$/i;\nconst keyNeedsConversion = key => !(canPassAsIs(key) && validKeyRgx.test(key));\nconst isNested = value => value && typeof value === 'object';\nconst setNestedWraps = (value, pre, post) => {\n  value.pre = pre;\n  value.post = post;\n};\nconst getNestedWraps = ({\n  pre,\n  post\n}) => ({\n  pre,\n  post\n});\nconst setNestedShortContent = (value, short) => {\n  value.short = short;\n};\nconst getNestedShortContent = value => value.short;\nconst isList = target => isNested(target) && target.type === 'list';\nconst createList = () => ({\n  type: 'list',\n  values: [],\n  pre: '[',\n  post: ']'\n});\nconst addToList = ({\n  values\n}, index, value) => values[index] = value;\nconst iterateList = ({\n  values\n}, handler) => values.forEach((value, index) => handler(value, index));\nconst getListSize = ({\n  values\n}) => values.length;\nconst isStorage = target => isNested(value) && target.type === 'storage';\nconst createStorage = () => ({\n  type: 'storage',\n  keys: [],\n  values: [],\n  pre: '{',\n  post: '}'\n});\nconst addToStorage = ({\n  keys,\n  values\n}, key, value) => {\n  keys.push(key);\n  values.push(value);\n};\nconst iterateStorage = (storage, handler) => {\n  const {\n    keys,\n    values\n  } = storage;\n  keys.forEach((key, index) => handler(values[index], key));\n};\nconst getStorageSize = ({\n  keys\n}) => keys.length;\n\nvar utils = /*#__PURE__*/Object.freeze({\n  MAX_FUNC_STR_LEN: MAX_FUNC_STR_LEN,\n  setCustomClassNameTo: setCustomClassNameTo,\n  getCustomClassNameFrom: getCustomClassNameFrom,\n  canPassAsIs: canPassAsIs,\n  keyNeedsConversion: keyNeedsConversion,\n  isNested: isNested,\n  setNestedWraps: setNestedWraps,\n  getNestedWraps: getNestedWraps,\n  setNestedShortContent: setNestedShortContent,\n  getNestedShortContent: getNestedShortContent,\n  isList: isList,\n  createList: createList,\n  addToList: addToList,\n  iterateList: iterateList,\n  getListSize: getListSize,\n  isStorage: isStorage,\n  createStorage: createStorage,\n  addToStorage: addToStorage,\n  iterateStorage: iterateStorage,\n  getStorageSize: getStorageSize\n});\n\nvar convertArray = ((value, convertValue) => {\n  const result = createList();\n  value.forEach((item, index) => {\n    addToList(result, index, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertBoolean = (value => `${value}`);\n\nvar convertDate = (value => `Date(${value})`);\n\nvar convertError = ((value, convertValue) => {\n  const {\n    name,\n    message,\n    columnNumber,\n    fileName,\n    lineNumber\n  } = value;\n  const result = createStorage();\n  addToStorage(result, 'name', convertValue(name));\n  addToStorage(result, 'message', convertValue(message));\n  addToStorage(result, 'columnNumber', convertValue(columnNumber));\n  addToStorage(result, 'fileName', convertValue(fileName));\n  addToStorage(result, 'lineNumber', convertValue(lineNumber));\n  setCustomClassNameTo(result, name || 'Error');\n  return result;\n});\n\nvar convertFunction = (value => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const type = getClass.getClassName(value) || 'Function';\n  let {\n    name\n  } = value;\n\n  if (!name) {\n    name = content.replace(/\\s+/g, ' ').substr(content.substr(0, 9) === 'function ' ? 9 : 0, MAX_FUNC_STR_LEN);\n\n    if (content.length < MAX_FUNC_STR_LEN) {\n      name = `${name}...`;\n    }\n  }\n\n  const result = createStorage();\n  addToStorage(result, 'code', content);\n  setNestedWraps(result, '(', ')');\n  setNestedShortContent(result, name);\n  setCustomClassNameTo(result, type);\n  return result;\n});\n\nvar convertMap = ((value, convertValue) => {\n  const result = createStorage();\n  value.forEach((item, key) => {\n    /*\n    Do not use keyNeedsConversion() here, because Map may hold values of\n    different types as keys and string should be quoted, otherwise it may be\n    unclear -- what you see string true or boolean true as key.\n    */\n    addToStorage(result, convertValue(key), convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertNumber = (value => `${value}`);\n\nvar convertObject = ((value, convertValue) => {\n  const result = createStorage();\n  Object.keys(value).forEach(key => {\n    addToStorage(result, keyNeedsConversion(key) ? convertValue(key) : key, convertValue(value[key]));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertSet = ((value, convertValue) => {\n  const result = createList(); // remove need in indexes for Set\n\n  let index = 0;\n  value.forEach(item => {\n    addToList(result, index++, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertString = (value => JSON.stringify(value));\n\nvar convertSymbol = (value => String(value));\n\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\n\nconst addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\nconst hasTypeHandler = constructor => types.has(constructor);\nconst getTypeHandler = constructor => types.get(constructor);\nconst removeTypeHandler = constructor => types.delete(constructor);\nconst defaultTypeHandlerSelector = value => {\n  const type = getClass__default(value);\n  return type && getTypeHandler(type);\n};\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\n\nconst selectTypeHandler = value => typeHandlerSelector(value);\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\n\nconst setTypeHandlerSelector = newSelector => {\n  typeHandlerSelector = newSelector;\n};\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n\nconst {\n  get: getMaxNesingDepth,\n  set: setMaxNesingDepth\n} = closureValue.singleValueFactory(2);\n\nconst isString = value => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n\n    default:\n      return value === null || value instanceof Date;\n  }\n};\nconst toString = value => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n\n    case 'string':\n      return convertString(value);\n\n    case 'boolean':\n      return convertBoolean(value);\n\n    case 'number':\n      return convertNumber(value);\n\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      return `${value}`;\n  }\n};\n\nconst fallbackConversion = (value, convertValue, refs) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value, convertValue, refs);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue, refs);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue, refs);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue, refs);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue, refs);\n  }\n\n  return convertObject(value, convertValue, refs);\n};\n\nconst convert = (value, level = 1, refs = new Map()) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const maxLevel = getMaxNesingDepth();\n\n  if (level > maxLevel) {\n    return toString(value);\n  }\n\n  const complex = !isString(value);\n\n  if (complex && refs.has(value)) {\n    return refs.get(value);\n  }\n\n  const handler = selectTypeHandler(value);\n\n  const nextConvert = propValue => convert(propValue, level + 1, refs);\n\n  let result;\n\n  if (handler) {\n    result = handler(value, nextConvert, refs);\n  }\n\n  result = fallbackConversion(value, nextConvert, refs);\n\n  if (complex) {\n    refs.set(value, result);\n  }\n\n  return result;\n};\n\nexports.default = convert;\nexports.utils = utils;\nexports.addTypeHandler = addTypeHandler;\nexports.getTypeHandler = getTypeHandler;\nexports.hasTypeHandler = hasTypeHandler;\nexports.removeTypeHandler = removeTypeHandler;\nexports.setTypeHandlerSelector = setTypeHandlerSelector;\nexports.isString = isString;\nexports.toString = toString;\nexports.convert = convert;\nexports.getMaxNesingDepth = getMaxNesingDepth;\nexports.setMaxNesingDepth = setMaxNesingDepth;\n//# sourceMappingURL=index.js.map\n","import { utils } from '@actualwave/log-data-renderer';\n\nconst { isList, getListSize, getNestedWraps, getCustomClassNameFrom } = utils;\n\nexport const SPACE_LEVEL = '  ';\n\nexport const INFO_TYPE = 'info';\nexport const LOG_TYPE = 'log';\nexport const WARNING_TYPE = 'warning';\nexport const ERROR_TYPE = 'error';\nexport const SUCCESS_TYPE = 'success';\n\nexport const getStringWrap = (value) => {\n  const wraps = getNestedWraps(value);\n\n  const name = getCustomClassNameFrom(value);\n\n  if (isList(value)) {\n    wraps.pre = `${name}(${getListSize(value)})${wraps.pre}`;\n  } else {\n    wraps.pre = `${name}${wraps.pre}`;\n  }\n\n  return wraps;\n};\n\nexport const removeAllChildren = (target) => {\n  while (target.firstChild) {\n    target.removeChild(target.firstChild);\n  }\n};\n","/* eslint-disable no-use-before-define */\nimport { utils } from '@actualwave/log-data-renderer';\nimport { SPACE_LEVEL, getStringWrap, removeAllChildren } from './utils';\n\nconst {\n  iterateStorage,\n  isNested,\n  isList,\n  iterateList,\n  getNestedShortContent,\n  getNestedWraps,\n  getListSize,\n  getStorageSize,\n} = utils;\n\nconst setExpandIconSymbol = (icon, expanded) => {\n  icon.innerHTML = expanded ? '-' : '+';\n};\n\nconst createExpandIcon = (expanded) => {\n  const icon = document.createElement('span');\n  icon.className = 'ui-console-button-expand';\n\n  setExpandIconSymbol(icon, expanded);\n\n  return icon;\n};\n\nconst createCollapsedContent = (value, size) => {\n  let content = getNestedShortContent(value);\n\n  if (content === undefined) {\n    content = size ? ' ... ' : '';\n  }\n\n  return [document.createTextNode(content)];\n};\n\nconst createUINestedArrayContent = (list, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateList(list, (value) => {\n    text += space;\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedObjectContent = (storage, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateStorage(storage, (value, key) => {\n    text += `${space}`;\n\n    if (isNested(key)) {\n      result.push(document.createTextNode(`${text}[`));\n      result.push(createUINested(key, space));\n      text = ']';\n    } else {\n      text += key;\n    }\n\n    text += ': ';\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      result.push(createUINested(value, space));\n      text = '';\n    } else {\n      text += value;\n    }\n\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedContent = (value, initSpace) => {\n  const space = `${SPACE_LEVEL}${initSpace}`;\n\n  if (isList(value)) {\n    return createUINestedArrayContent(value, space);\n  }\n\n  return createUINestedObjectContent(value, space);\n};\n\nexport function createUINested(value, space = '', initExpanded = false) {\n  const size = isList(value) ? getListSize(value) : getStorageSize(value);\n  let expanded = initExpanded && !!size;\n  let contentExpanded;\n  const contentCollapsed = createCollapsedContent(value, size);\n  const { pre, post } = getStringWrap(value);\n  const icon = createExpandIcon(expanded);\n  const wrapper = document.createElement('span');\n\n  wrapper.className = 'ui-console-nested-wrapper';\n\n  const link = document.createElement('span');\n  link.className = 'ui-console-clickable';\n  link.appendChild(icon);\n  link.appendChild(document.createTextNode(pre));\n\n  const drawContents = () => {\n    let content;\n\n    removeAllChildren(wrapper);\n\n    wrapper.appendChild(link);\n\n    if (expanded) {\n      if (!contentExpanded) {\n        contentExpanded = createUINestedContent(value, space);\n      }\n\n      content = contentExpanded;\n    } else {\n      content = contentCollapsed;\n    }\n\n    content.forEach((node) => wrapper.appendChild(node));\n\n    wrapper.appendChild(\n      document.createTextNode(expanded ? `${space}${post}` : post),\n    );\n  };\n\n  link.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    expanded = !expanded;\n\n    setExpandIconSymbol(icon, expanded);\n    drawContents();\n  });\n\n  drawContents();\n\n  return wrapper;\n}\n","\nimport convert, { utils } from '@actualwave/log-data-renderer';\nimport { createUINested } from './nested';\n\nconst { isNested, canPassAsIs } = utils;\n\nconst createSimpleValue = (value) => document.createTextNode(`${value} `);\n\nexport const buildContent = (content, item, converted = false) => {\n  content.forEach((value) => {\n    if (!converted && canPassAsIs(value)) {\n      // shortcut for log strings to not wrap them with quotes\n      item.appendChild(createSimpleValue(value));\n      return;\n    }\n\n    const result = converted ? value : convert(value);\n\n    if (isNested(result)) {\n      item.appendChild(createUINested(result, '', true));\n    } else {\n      item.appendChild(createSimpleValue(result));\n    }\n  });\n\n  return item;\n};\n","import {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n} from '@actualwave/log-data-renderer';\n\nimport {\n  INFO_TYPE,\n  LOG_TYPE,\n  WARNING_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE,\n} from './utils';\n\nimport { buildContent } from './dom';\n\nexport const init = (container, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const shiftOverMax = () => {\n    while (maxItems > 0 && maxItems < container.childElementCount) {\n      const child = container.firstElementChild;\n      if (!child) {\n        return;\n      }\n\n      child.remove();\n    }\n  };\n\n  const pushItem = (content, type = LOG_TYPE, converted = false) => {\n    const item = document.createElement('div');\n    item.className = `ui-console-item ui-console-item-${type}`;\n\n    buildContent(content, item, converted);\n\n    container.appendChild(item);\n    shiftOverMax();\n  };\n\n  return {\n    info: (...content) => pushItem(content, INFO_TYPE),\n    log: (...content) => pushItem(content, LOG_TYPE),\n    warn: (...content) => pushItem(content, WARNING_TYPE),\n    error: (...content) => pushItem(content, ERROR_TYPE),\n    success: (...content) => pushItem(content, SUCCESS_TYPE),\n    push: (type, ...content) => pushItem(content, type),\n    pushRendered: (type, ...content) => pushItem(content, type, true),\n  };\n};\n\nexport const create = (wrapper, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const container = document.createElement('div');\n  container.className = 'ui-console ui-console-container';\n  wrapper.appendChild(container);\n\n  return init(container, maxItems);\n};\n\n/*\nCustomizable type representation\n */\nexport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n};\n"],"names":["getClass","isList","getListSize","getNestedWraps","getCustomClassNameFrom","utils","SPACE_LEVEL","INFO_TYPE","LOG_TYPE","WARNING_TYPE","ERROR_TYPE","SUCCESS_TYPE","getStringWrap","value","wraps","name","pre","removeAllChildren","target","firstChild","removeChild","iterateStorage","isNested","iterateList","getNestedShortContent","getStorageSize","setExpandIconSymbol","icon","expanded","innerHTML","createExpandIcon","document","createElement","className","createCollapsedContent","size","content","undefined","createTextNode","createUINestedArrayContent","list","space","result","text","push","createUINested","createUINestedObjectContent","storage","key","createUINestedContent","initSpace","initExpanded","contentExpanded","contentCollapsed","post","wrapper","link","appendChild","drawContents","forEach","node","addEventListener","event","preventDefault","stopPropagation","canPassAsIs","createSimpleValue","buildContent","item","converted","convert","init","container","maxItems","Number","MAX_SAFE_INTEGER","shiftOverMax","childElementCount","child","firstElementChild","remove","pushItem","type","info","log","warn","error","success","pushRendered","create"],"mappings":"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"}