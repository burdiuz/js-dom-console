{"version":3,"file":"console.js","sources":["source/utils.js","node_modules/@actualwave/get-class/get-class.js","source/types/Array.js","source/types/Boolean.js","source/types/Date.js","source/types/Error.js","source/types/Function.js","source/types/Map.js","source/types/Number.js","source/types/Object.js","source/types/Set.js","source/types/String.js","source/types/Symbol.js","source/types/index.js","source/data.js","source/nested.js","source/dom.js","source/index.js"],"sourcesContent":["// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nexport const CLASS_NAME_KEY = Symbol('class-name');\n\nexport const SPACE_LEVEL = '  ';\nexport const MAX_FUNC_STR_LEN = 50;\n\nexport const INFO_TYPE = 'info';\nexport const LOG_TYPE = 'log';\nexport const WARNING_TYPE = 'warning';\nexport const ERROR_TYPE = 'error';\nexport const SUCCESS_TYPE = 'success';\n\nexport const setCustomClassNameTo = (data, className) =>\n  (data[CLASS_NAME_KEY] = className);\n\nexport const getCustomClassNameFrom = (data) => data[CLASS_NAME_KEY] || '';\n\nexport const getStringWrap = (value) => {\n  let pre;\n  let post;\n  const name = getCustomClassNameFrom(value);\n\n  if (value instanceof Array) {\n    pre = '[';\n    post = ']';\n  } else {\n    pre = '{';\n    post = '}';\n  }\n\n  pre = `${name}${pre}`;\n\n  return { pre, post };\n};\n\nexport const removeAllChildren = (target) => {\n  while (target.firstChild) {\n    target.removeChild(target.firstChild);\n  }\n};\n\nexport const getValueType = (value) => {\n  if (value === null || value === undefined) {\n    return undefined;\n  }\n\n  return value.constructor;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n  \n  const proto = Object.getPrototypeOf(target);\n  \n  if (typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n  \n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const match = String(getClass(value)).match(\n    /^(?:[^\\(\\{\\s]*)(?:class|function)\\s+([\\w\\d_$]+)(?:\\s*\\(|\\s*\\{|\\s+extends)/,\n  );\n\n  return match ? match[1] : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = value.map(convertValue);\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","export default (value) => `Date(${value})`;\n","import { setCustomClassNameTo } from '../utils';\n\nexport default (value, convertValue) => {\n  const { name, message, columnNumber, fileName, lineNumber } = value;\n  const result = {\n    name: convertValue(name),\n    message: convertValue(message),\n    columnNumber: convertValue(columnNumber),\n    fileName: convertValue(fileName),\n    lineNumber: convertValue(lineNumber),\n  };\n\n  setCustomClassNameTo(result, name || 'Error');\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport { MAX_FUNC_STR_LEN, setCustomClassNameTo } from '../utils';\n\nexport default (value) => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const name = getClassName(value) || 'Function';\n  const result = { content };\n\n  setCustomClassNameTo(\n    result,\n    `${name}(${content.substr(0, MAX_FUNC_STR_LEN)})`,\n  );\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo, getCustomClassNameFrom } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = {};\n\n  value.forEach((item, key) => {\n    let keyRep = convertValue(key);\n    // FIXME keys stringified for now,\n    // need different internal structure to represent non string keys\n    if (typeof keyRep !== 'string') {\n      keyRep = `${getCustomClassNameFrom(keyRep)}(${String(key)})`;\n    }\n\n    result[keyRep] = convertValue(item);\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = {};\n\n  Object.keys(value).forEach((key) => {\n    result[key] = convertValue(value[key]);\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = [];\n\n  value.forEach((item) => result.push(convertValue(item)));\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => JSON.stringify(value);\n","export default (value) => String(value);\n","import { getValueType } from '../utils';\nimport convertArray from './Array';\nimport convertBoolean from './Boolean';\nimport convertDate from './Date';\nimport convertError from './Error';\nimport convertFunction from './Function';\nimport convertMap from './Map';\nimport convertNumber from './Number';\nimport convertObject from './Object';\nimport convertSet from './Set';\nimport convertString from './String';\nimport convertSymbol from './Symbol';\n\n// Every value in JS has .constructor property\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\nexport const addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\n\nexport const hasTypeHandler = (constructor) => types.has(constructor);\n\nexport const getTypeHandler = (constructor) => types.get(constructor);\n\nexport const removeTypeHandler = (constructor) => types.delete(constructor);\n\nexport const defaultTypeHandlerSelector = (value) => {\n  const type = getValueType(value);\n\n  return type && getTypeHandler(type);\n};\n\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\nexport const selectTypeHandler = (value) => typeHandlerSelector(value);\n\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\nexport const setTypeHandlerSelector = (newSelector) => {\n  typeHandlerSelector = newSelector;\n};\n\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n","import convertArray from './types/Array';\nimport convertBoolean from './types/Boolean';\nimport convertDate from './types/Date';\nimport convertError from './types/Error';\nimport convertFunction from './types/Function';\nimport convertMap from './types/Map';\nimport convertNumber from './types/Number';\nimport convertObject from './types/Object';\nimport convertSet from './types/Set';\nimport convertString from './types/String';\nimport convertSymbol from './types/Symbol';\n\nimport { selectTypeHandler } from './types';\n\nexport const isString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n    default:\n      return value === null || value instanceof Date;\n  }\n};\n\nexport const toString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n    case 'string':\n      return convertString(value);\n    case 'boolean':\n      return convertBoolean(value);\n    case 'number':\n      return convertNumber(value);\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      return `${value}`;\n  }\n};\n\nconst fallbackConversion = (value, convertValue) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value, convertValue);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue);\n  }\n\n  return convertObject(value, convertValue);\n};\n\nexport const convert = (value) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const handler = selectTypeHandler(value);\n\n  if (handler) {\n    return handler(value, convert);\n  }\n\n  return fallbackConversion(value, convert);\n};\n","/* eslint-disable no-use-before-define */\nimport { SPACE_LEVEL, getStringWrap, removeAllChildren } from './utils';\n\nconst setExpandIconSymbol = (icon, expanded) => {\n  icon.innerHTML = expanded ? '-' : '+';\n};\n\nconst createExpandIcon = (expanded) => {\n  const icon = document.createElement('span');\n  icon.className = 'ui-console-button-expand';\n\n  setExpandIconSymbol(icon, expanded);\n\n  return icon;\n};\n\nconst createCollapsedContent = () => [document.createTextNode(' ... ')];\n\nconst createUINestedArrayContent = (list, space) => {\n  const result = [];\n  let text = '\\n';\n\n  list.forEach((value) => {\n    text += space;\n\n    if (typeof value === 'object') {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedObjectContent = (object, space) => {\n  const result = [];\n  let text = '\\n';\n\n  Object.keys(object).forEach((key) => {\n    const value = object[key];\n    text += `${space}${key}: `;\n\n    if (typeof value === 'object') {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedContent = (value, initSpace) => {\n  const space = `${SPACE_LEVEL}${initSpace}`;\n\n  if (value instanceof Array) {\n    return createUINestedArrayContent(value, space);\n  }\n\n  return createUINestedObjectContent(value, space);\n};\n\nexport function createUINested(value, space = '', initExpanded = false) {\n  let expanded = initExpanded;\n  let contentExpanded;\n  const contentCollapsed = createCollapsedContent();\n\n  const { pre, post } = getStringWrap(value);\n  const icon = createExpandIcon(expanded);\n  const wrapper = document.createElement('span');\n\n  wrapper.className = 'ui-console-clickable';\n\n  const drawContents = () => {\n    let content;\n\n    removeAllChildren(wrapper);\n\n    wrapper.appendChild(icon);\n    wrapper.appendChild(document.createTextNode(pre));\n\n    if (expanded) {\n      if (!contentExpanded) {\n        contentExpanded = createUINestedContent(value, space);\n      }\n\n      content = contentExpanded;\n    } else {\n      content = contentCollapsed;\n    }\n\n    content.forEach((node) => wrapper.appendChild(node));\n\n    wrapper.appendChild(\n      document.createTextNode(expanded ? `${space}${post}` : post),\n    );\n  };\n\n  wrapper.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    expanded = !expanded;\n\n    setExpandIconSymbol(icon, expanded);\n    drawContents();\n  });\n\n  drawContents();\n\n  return wrapper;\n}\n","import { convert } from './data';\nimport { createUINested } from './nested';\n\nconst createSimpleValue = (value) => document.createTextNode(`${value} `);\n\nexport const buildContent = (content, item) => {\n  content.forEach((value) => {\n    if (typeof value === 'string') {\n      // shortcut for log strings to not wrap them with quotes\n      item.appendChild(createSimpleValue(value));\n      return;\n    }\n\n    const result = convert(value);\n\n    if (typeof result === 'object') {\n      item.appendChild(createUINested(result, '', true));\n    } else {\n      item.appendChild(createSimpleValue(result));\n    }\n  });\n\n  return item;\n};\n","import {\n  INFO_TYPE,\n  LOG_TYPE,\n  WARNING_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE,\n} from './utils';\nimport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n} from './types';\nimport { buildContent } from './dom';\n\nexport const init = (container, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const shiftOverMax = () => {\n    while (maxItems > 0 && maxItems < container.childElementCount) {\n      const child = container.firstElementChild;\n      if (!child) {\n        return;\n      }\n\n      child.remove();\n    }\n  };\n\n  const pushItem = (content, type = LOG_TYPE) => {\n    const item = document.createElement('div');\n    item.className = `ui-console-item ui-console-item-${type}`;\n\n    buildContent(content, item);\n\n    container.appendChild(item);\n    shiftOverMax();\n  };\n\n  return {\n    info: (...content) => pushItem(content, INFO_TYPE),\n    log: (...content) => pushItem(content, LOG_TYPE),\n    warn: (...content) => pushItem(content, WARNING_TYPE),\n    error: (...content) => pushItem(content, ERROR_TYPE),\n    success: (...content) => pushItem(content, SUCCESS_TYPE),\n  };\n};\n\nexport const create = (wrapper, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const container = document.createElement('div');\n  container.className = 'ui-console ui-console-container';\n  wrapper.appendChild(container);\n\n  return init(container, maxItems);\n};\n\n/*\nCustomizable type representation\n */\nexport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n};\n"],"names":["CLASS_NAME_KEY","Symbol","SPACE_LEVEL","MAX_FUNC_STR_LEN","INFO_TYPE","LOG_TYPE","WARNING_TYPE","ERROR_TYPE","SUCCESS_TYPE","setCustomClassNameTo","data","className","getCustomClassNameFrom","getStringWrap","value","pre","post","name","Array","removeAllChildren","target","firstChild","removeChild","getValueType","undefined","constructor","convertValue","result","map","getClassName","message","columnNumber","fileName","lineNumber","content","String","length","substr","forEach","item","key","keyRep","Object","keys","push","JSON","stringify","types","Map","addTypeHandler","handler","delete","set","hasTypeHandler","has","getTypeHandler","get","removeTypeHandler","defaultTypeHandlerSelector","type","typeHandlerSelector","selectTypeHandler","setTypeHandlerSelector","newSelector","convertArray","Boolean","convertBoolean","Date","convertDate","Error","convertError","Function","convertFunction","convertMap","Number","convertNumber","convertObject","Set","convertSet","convertString","convertSymbol","isString","toString","fallbackConversion","convert","setExpandIconSymbol","icon","expanded","innerHTML","createExpandIcon","document","createElement","createCollapsedContent","createTextNode","createUINestedArrayContent","list","space","text","createUINested","createUINestedObjectContent","object","createUINestedContent","initSpace","initExpanded","contentExpanded","contentCollapsed","wrapper","drawContents","appendChild","node","addEventListener","event","preventDefault","stopPropagation","createSimpleValue","buildContent","init","container","maxItems","MAX_SAFE_INTEGER","shiftOverMax","childElementCount","child","firstElementChild","remove","pushItem","info","log","warn","error","success","create"],"mappings":"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"}