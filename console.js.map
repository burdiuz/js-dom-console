{"version":3,"file":"console.js","sources":["source/utils.js","node_modules/@actualwave/get-class/get-class.js","source/types/Array.js","source/types/Boolean.js","source/types/Date.js","source/types/Error.js","source/types/Function.js","source/types/Map.js","source/types/Number.js","source/types/Object.js","source/types/Set.js","source/types/String.js","source/types/Symbol.js","source/types/index.js","node_modules/@actualwave/closure-value/closure-value.js","source/max-depth.js","source/data.js","source/nested.js","source/dom.js","source/index.js"],"sourcesContent":["// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nexport const CLASS_NAME_KEY = '@class-name';\n\nexport const SPACE_LEVEL = '  ';\nexport const MAX_FUNC_STR_LEN = 30;\n\nexport const INFO_TYPE = 'info';\nexport const LOG_TYPE = 'log';\nexport const WARNING_TYPE = 'warning';\nexport const ERROR_TYPE = 'error';\nexport const SUCCESS_TYPE = 'success';\n\nexport const setCustomClassNameTo = (data, className) =>\n  (data[CLASS_NAME_KEY] = className);\n\nexport const getCustomClassNameFrom = (data) => data[CLASS_NAME_KEY] || '';\n\nexport const getStringWrap = (value) => {\n  let pre;\n  let post;\n  const name = getCustomClassNameFrom(value);\n\n  if (value instanceof Array) {\n    pre = '[';\n    post = ']';\n  } else {\n    pre = '{';\n    post = '}';\n  }\n\n  pre = `${name}${pre}`;\n\n  return { pre, post };\n};\n\nexport const removeAllChildren = (target) => {\n  while (target.firstChild) {\n    target.removeChild(target.firstChild);\n  }\n};\n\nexport const canPassAsIs = (value) => typeof value === 'string';\n\nconst validKeyRgx = /^[\\w_$][\\w\\d_$]*$/i;\n\nexport const keyNeedsConversion = (key) => !(canPassAsIs(key) && validKeyRgx.test(key));\n\nexport const isNested = (value) => typeof value === 'object';\n\nexport const createComplexDataStorage = () => new Map();\n\nexport const isStorage = (storage) => storage instanceof Map;\n\nexport const addToStorage = (storage, key, value) => storage.set(key, value);\n\nexport const iterateStorage = (storage, handler) => storage.forEach(handler);\n\nexport const getStorageSize = (storage) => storage.size;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n\n  const constructor = target.constructor;\n\n  if(\n    typeof constructor === 'function'\n    && target instanceof constructor\n  ) {\n    return target.constructor;\n  }\n\n  const proto = Object.getPrototypeOf(target);\n\n  if (proto && typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto || Object;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n\n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const valueClass = getClass(value);\n\n  return valueClass ? valueClass.name : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = value.map(convertValue);\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","export default (value) => `Date(${value})`;\n","import {\n  setCustomClassNameTo,\n  createComplexDataStorage,\n  addToStorage,\n} from '../utils';\n\nexport default (value, convertValue) => {\n  const { name, message, columnNumber, fileName, lineNumber } = value;\n\n  const result = createComplexDataStorage();\n\n  addToStorage(result, 'name', convertValue(name));\n  addToStorage(result, 'message', convertValue(message));\n  addToStorage(result, 'columnNumber', convertValue(columnNumber));\n  addToStorage(result, 'fileName', convertValue(fileName));\n  addToStorage(result, 'lineNumber', convertValue(lineNumber));\n\n  setCustomClassNameTo(result, name || 'Error');\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  MAX_FUNC_STR_LEN,\n  setCustomClassNameTo,\n  createComplexDataStorage,\n  addToStorage,\n} from '../utils';\n\nexport default (value) => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const type = getClassName(value) || 'Function';\n\n  let { name } = value;\n\n  if (!name) {\n    name = content.substr(\n      content.substr(0, 9) === 'function ' ? 9 : 0,\n      MAX_FUNC_STR_LEN,\n    );\n  }\n\n  const result = createComplexDataStorage();\n  addToStorage(result, 'content', content);\n\n  setCustomClassNameTo(\n    result,\n    // FIXME almost every function starts with \"function \", remove this from short string\n    `${type}(${name})`,\n  );\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  setCustomClassNameTo,\n  createComplexDataStorage,\n  addToStorage,\n} from '../utils';\n\nexport default (value, convertValue) => {\n  const result = createComplexDataStorage();\n\n  value.forEach((item, key) => {\n    /*\n    Do not use keyNeedsConversion() here, because Map may hold values of\n    different types as keys and string should be quoted, otherwise it may be\n    unclear -- what you see string true or boolean true as key.\n    */\n    addToStorage(result, convertValue(key), convertValue(item));\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  setCustomClassNameTo,\n  createComplexDataStorage,\n  addToStorage,\n  keyNeedsConversion,\n} from '../utils';\n\nexport default (value, convertValue) => {\n  const result = createComplexDataStorage();\n\n  Object.keys(value).forEach((key) => {\n    addToStorage(\n      result,\n      keyNeedsConversion(key) ? convertValue(key) : key,\n      convertValue(value[key]),\n    );\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo } from '../utils';\n\nexport default (value, convertValue) => {\n  const result = [];\n\n  value.forEach((item) => result.push(convertValue(item)));\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => JSON.stringify(value);\n","export default (value) => String(value);\n","import getClass from '@actualwave/get-class';\n\nimport convertArray from './Array';\nimport convertBoolean from './Boolean';\nimport convertDate from './Date';\nimport convertError from './Error';\nimport convertFunction from './Function';\nimport convertMap from './Map';\nimport convertNumber from './Number';\nimport convertObject from './Object';\nimport convertSet from './Set';\nimport convertString from './String';\nimport convertSymbol from './Symbol';\n\n// Every value in JS has .constructor property\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\nexport const addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\n\nexport const hasTypeHandler = (constructor) => types.has(constructor);\n\nexport const getTypeHandler = (constructor) => types.get(constructor);\n\nexport const removeTypeHandler = (constructor) => types.delete(constructor);\n\nexport const defaultTypeHandlerSelector = (value) => {\n  const type = getClass(value);\n\n  return type && getTypeHandler(type);\n};\n\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\nexport const selectTypeHandler = (value) => typeHandlerSelector(value);\n\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\nexport const setTypeHandlerSelector = (newSelector) => {\n  typeHandlerSelector = newSelector;\n};\n\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst singleValueFactory = (defaultValue = null, valueFormatter = (value) => value) => {\n  let value = defaultValue;\n\n  return {\n    getDefault: () => defaultValue,\n    get: () => value,\n    set: (newValue = defaultValue) => {\n      value = valueFormatter(newValue);\n    },\n  };\n};\n\nconst valuesMapFactory = (defaults = new Map(), valueFormatter = (key, value) => value) => {\n  const defaultValues = new Map(defaults);\n  const getDefault = () => new Map(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    copy: () => new Map(values),\n    delete: (key) => values.delete(key),\n    has: (key) => values.has(key),\n    set: (key, value) => values.set(key, valueFormatter(key, value)),\n    get: (key) => values.get(key),\n  };\n};\n\nconst valuesSetFactory = (defaults = new Set(), valueFormatter = (value) => value) => {\n  const defaultValues = new Set(defaults);\n  const getDefault = () => new Set(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    get: () => new Set(values),\n    delete: (value) => values.delete(value),\n    has: (value) => values.has(value),\n    add: (value) => values.add(valueFormatter(value)),\n  };\n};\n\nexports.singleValueFactory = singleValueFactory;\nexports.valuesMapFactory = valuesMapFactory;\nexports.valuesSetFactory = valuesSetFactory;","import { singleValueFactory } from '@actualwave/closure-value';\r\n\r\nexport const {\r\n  get: getMaxNesingDepth,\r\n  set: setMaxNesingDepth,\r\n} = singleValueFactory(2);\r\n","import convertArray from './types/Array';\nimport convertBoolean from './types/Boolean';\nimport convertDate from './types/Date';\nimport convertError from './types/Error';\nimport convertFunction from './types/Function';\nimport convertMap from './types/Map';\nimport convertNumber from './types/Number';\nimport convertObject from './types/Object';\nimport convertSet from './types/Set';\nimport convertString from './types/String';\nimport convertSymbol from './types/Symbol';\n\nimport { getMaxNesingDepth } from './max-depth';\n\nimport { selectTypeHandler } from './types';\n\nexport const isString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n    default:\n      return value === null || value instanceof Date;\n  }\n};\n\nexport const toString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n    case 'string':\n      return convertString(value);\n    case 'boolean':\n      return convertBoolean(value);\n    case 'number':\n      return convertNumber(value);\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      return `${value}`;\n  }\n};\n\nconst fallbackConversion = (value, convertValue, refs) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value, convertValue, refs);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue, refs);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue, refs);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue, refs);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue, refs);\n  }\n\n  return convertObject(value, convertValue, refs);\n};\n\nexport const convert = (value, level = 1, refs = new Map()) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const maxLevel = getMaxNesingDepth();\n\n  if (level > maxLevel) {\n    return toString(value);\n  }\n\n  const complex = !isString(value);\n\n  if (complex && refs.has(value)) {\n    return refs.get(value);\n  }\n\n  const handler = selectTypeHandler(value);\n  const nextConvert = (propValue) => convert(propValue, level + 1, refs);\n  let result;\n\n  if (handler) {\n    result = handler(value, nextConvert, refs);\n  }\n\n  result = fallbackConversion(value, nextConvert, refs);\n\n  if (complex) {\n    refs.set(value, result);\n  }\n\n  return result;\n};\n","/* eslint-disable no-use-before-define */\nimport {\n  SPACE_LEVEL,\n  getStringWrap,\n  removeAllChildren,\n  iterateStorage,\n  isNested,\n} from './utils';\n\nconst setExpandIconSymbol = (icon, expanded) => {\n  icon.innerHTML = expanded ? '-' : '+';\n};\n\nconst createExpandIcon = (expanded) => {\n  const icon = document.createElement('span');\n  icon.className = 'ui-console-button-expand';\n\n  setExpandIconSymbol(icon, expanded);\n\n  return icon;\n};\n\nconst createCollapsedContent = () => [document.createTextNode(' ... ')];\n\nconst createUINestedArrayContent = (list, space) => {\n  const result = [];\n  let text = '\\n';\n\n  list.forEach((value) => {\n    text += space;\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedObjectContent = (storage, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateStorage(storage, (value, key) => {\n    text += `${space}`;\n\n    if (isNested(key)) {\n      result.push(document.createTextNode(`${text}[`));\n      result.push(createUINested(key, space));\n      text = ']';\n    } else {\n      text += key;\n    }\n\n    text += ': ';\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      result.push(createUINested(value, space));\n      text = '';\n    } else {\n      text += value;\n    }\n\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedContent = (value, initSpace) => {\n  const space = `${SPACE_LEVEL}${initSpace}`;\n\n  if (value instanceof Array) {\n    return createUINestedArrayContent(value, space);\n  }\n\n  return createUINestedObjectContent(value, space);\n};\n\nexport function createUINested(value, space = '', initExpanded = false) {\n  let expanded = initExpanded;\n  let contentExpanded;\n  const contentCollapsed = createCollapsedContent();\n\n  const { pre, post } = getStringWrap(value);\n  const icon = createExpandIcon(expanded);\n  const wrapper = document.createElement('span');\n\n  wrapper.className = 'ui-console-nested-wrapper';\n\n  const link = document.createElement('span');\n  link.className = 'ui-console-clickable';\n  link.appendChild(icon);\n  link.appendChild(document.createTextNode(pre));\n\n  const drawContents = () => {\n    let content;\n\n    removeAllChildren(wrapper);\n\n    wrapper.appendChild(link);\n\n    if (expanded) {\n      if (!contentExpanded) {\n        contentExpanded = createUINestedContent(value, space);\n      }\n\n      content = contentExpanded;\n    } else {\n      content = contentCollapsed;\n    }\n\n    content.forEach((node) => wrapper.appendChild(node));\n\n    wrapper.appendChild(\n      document.createTextNode(expanded ? `${space}${post}` : post),\n    );\n  };\n\n  link.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    expanded = !expanded;\n\n    setExpandIconSymbol(icon, expanded);\n    drawContents();\n  });\n\n  drawContents();\n\n  return wrapper;\n}\n","import { convert } from './data';\nimport { isNested, canPassAsIs } from './utils';\nimport { createUINested } from './nested';\n\nconst createSimpleValue = (value) => document.createTextNode(`${value} `);\n\nexport const buildContent = (content, item) => {\n  content.forEach((value) => {\n    if (canPassAsIs(value)) {\n      // shortcut for log strings to not wrap them with quotes\n      item.appendChild(createSimpleValue(value));\n      return;\n    }\n\n    const result = convert(value);\n\n    if (isNested(result)) {\n      item.appendChild(createUINested(result, '', true));\n    } else {\n      item.appendChild(createSimpleValue(result));\n    }\n  });\n\n  return item;\n};\n","import {\n  INFO_TYPE,\n  LOG_TYPE,\n  WARNING_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE,\n} from './utils';\nimport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n} from './types';\nimport { getMaxNesingDepth, setMaxNesingDepth } from './max-depth';\nimport { buildContent } from './dom';\n\nexport const init = (container, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const shiftOverMax = () => {\n    while (maxItems > 0 && maxItems < container.childElementCount) {\n      const child = container.firstElementChild;\n      if (!child) {\n        return;\n      }\n\n      child.remove();\n    }\n  };\n\n  const pushItem = (content, type = LOG_TYPE) => {\n    const item = document.createElement('div');\n    item.className = `ui-console-item ui-console-item-${type}`;\n\n    buildContent(content, item);\n\n    container.appendChild(item);\n    shiftOverMax();\n  };\n\n  return {\n    info: (...content) => pushItem(content, INFO_TYPE),\n    log: (...content) => pushItem(content, LOG_TYPE),\n    warn: (...content) => pushItem(content, WARNING_TYPE),\n    error: (...content) => pushItem(content, ERROR_TYPE),\n    success: (...content) => pushItem(content, SUCCESS_TYPE),\n  };\n};\n\nexport const create = (wrapper, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const container = document.createElement('div');\n  container.className = 'ui-console ui-console-container';\n  wrapper.appendChild(container);\n\n  return init(container, maxItems);\n};\n\n/*\nCustomizable type representation\n */\nexport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n};\n"],"names":["CLASS_NAME_KEY","SPACE_LEVEL","MAX_FUNC_STR_LEN","INFO_TYPE","LOG_TYPE","WARNING_TYPE","ERROR_TYPE","SUCCESS_TYPE","setCustomClassNameTo","data","className","getCustomClassNameFrom","getStringWrap","value","pre","post","name","Array","removeAllChildren","target","firstChild","removeChild","canPassAsIs","validKeyRgx","keyNeedsConversion","key","test","isNested","createComplexDataStorage","Map","addToStorage","storage","set","iterateStorage","handler","forEach","convertValue","result","map","getClassName","message","columnNumber","fileName","lineNumber","content","String","length","type","substr","item","Object","keys","push","JSON","stringify","types","addTypeHandler","constructor","delete","hasTypeHandler","has","getTypeHandler","get","removeTypeHandler","defaultTypeHandlerSelector","getClass","typeHandlerSelector","selectTypeHandler","setTypeHandlerSelector","newSelector","convertArray","Boolean","convertBoolean","Date","convertDate","Error","convertError","Function","convertFunction","convertMap","Number","convertNumber","convertObject","Set","convertSet","convertString","Symbol","convertSymbol","getMaxNesingDepth","setMaxNesingDepth","singleValueFactory","isString","toString","fallbackConversion","refs","convert","level","undefined","maxLevel","complex","nextConvert","propValue","setExpandIconSymbol","icon","expanded","innerHTML","createExpandIcon","document","createElement","createCollapsedContent","createTextNode","createUINestedArrayContent","list","space","text","createUINested","createUINestedObjectContent","createUINestedContent","initSpace","initExpanded","contentExpanded","contentCollapsed","wrapper","link","appendChild","drawContents","node","addEventListener","event","preventDefault","stopPropagation","createSimpleValue","buildContent","init","container","maxItems","MAX_SAFE_INTEGER","shiftOverMax","childElementCount","child","firstElementChild","remove","pushItem","info","log","warn","error","success","create"],"mappings":"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"}