{"version":3,"file":"console.js","sources":["node_modules/@actualwave/get-class/get-class.js","node_modules/@actualwave/closure-value/closure-value.js","node_modules/@actualwave/log-data-renderer/index.js","source/utils.js","source/nested.js","source/dom.js","source/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n\n  const constructor = target.constructor;\n\n  if(\n    typeof constructor === 'function'\n    && target instanceof constructor\n  ) {\n    return target.constructor;\n  }\n\n  const proto = Object.getPrototypeOf(target);\n\n  if (proto && typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto || Object;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n\n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const valueClass = getClass(value);\n\n  return valueClass ? valueClass.name : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst singleValueFactory = (defaultValue = null, valueFormatter = (value) => value) => {\n  let value = defaultValue;\n\n  return {\n    getDefault: () => defaultValue,\n    get: () => value,\n    set: (newValue = defaultValue) => {\n      value = valueFormatter(newValue);\n    },\n  };\n};\n\nconst valuesMapFactory = (defaults = new Map(), valueFormatter = (key, value) => value) => {\n  const defaultValues = new Map(defaults);\n  const getDefault = () => new Map(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    copy: () => new Map(values),\n    delete: (key) => values.delete(key),\n    has: (key) => values.has(key),\n    set: (key, value) => values.set(key, valueFormatter(key, value)),\n    get: (key) => values.get(key),\n  };\n};\n\nconst valuesSetFactory = (defaults = new Set(), valueFormatter = (value) => value) => {\n  const defaultValues = new Set(defaults);\n  const getDefault = () => new Set(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    get: () => new Set(values),\n    delete: (value) => values.delete(value),\n    has: (value) => values.has(value),\n    add: (value) => values.add(valueFormatter(value)),\n  };\n};\n\nexports.singleValueFactory = singleValueFactory;\nexports.valuesMapFactory = valuesMapFactory;\nexports.valuesSetFactory = valuesSetFactory;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar getClass = require('@actualwave/get-class');\nvar getClass__default = _interopDefault(getClass);\nvar closureValue = require('@actualwave/closure-value');\n\n// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nconst CLASS_NAME_KEY = 'className';\nconst MAX_FUNC_STR_LEN = 30;\nconst setCustomClassNameTo = (data, className) => data[CLASS_NAME_KEY] = className;\nconst getCustomClassNameFrom = data => data[CLASS_NAME_KEY] || '';\nconst getStringWrap = value => {\n  let pre;\n  let post;\n  const name = getCustomClassNameFrom(value);\n\n  if (value instanceof Array) {\n    pre = '[';\n    post = ']';\n  } else {\n    pre = '{';\n    post = '}';\n  }\n\n  pre = `${name}${pre}`;\n  return {\n    pre,\n    post\n  };\n};\nconst canPassAsIs = value => typeof value === 'string';\nconst validKeyRgx = /^[\\w_$][\\w\\d_$]*$/i;\nconst keyNeedsConversion = key => !(canPassAsIs(key) && validKeyRgx.test(key));\nconst isNested = value => value && typeof value === 'object';\nconst isList = target => isNested(target) && target.type === 'list';\nconst createList = () => ({\n  type: 'list',\n  values: []\n});\nconst addToList = ({\n  values\n}, index, value) => values[index] = value;\nconst iterateList = ({\n  values\n}, handler) => values.forEach((value, index) => handler(value, index));\nconst getListSize = ({\n  values\n}) => values.length;\nconst isStorage = target => isNested(value) && target.type === 'storage';\nconst createStorage = () => ({\n  type: 'storage',\n  keys: [],\n  values: []\n});\nconst addToStorage = ({\n  keys,\n  values\n}, key, value) => {\n  keys.push(key);\n  values.push(value);\n};\nconst iterateStorage = (storage, handler) => {\n  const {\n    keys,\n    values\n  } = storage;\n  keys.forEach((key, index) => handler(values[index], key));\n};\nconst getStorageSize = ({\n  keys\n}) => keys.length;\n\nvar utils = /*#__PURE__*/Object.freeze({\n  CLASS_NAME_KEY: CLASS_NAME_KEY,\n  MAX_FUNC_STR_LEN: MAX_FUNC_STR_LEN,\n  setCustomClassNameTo: setCustomClassNameTo,\n  getCustomClassNameFrom: getCustomClassNameFrom,\n  getStringWrap: getStringWrap,\n  canPassAsIs: canPassAsIs,\n  keyNeedsConversion: keyNeedsConversion,\n  isNested: isNested,\n  isList: isList,\n  createList: createList,\n  addToList: addToList,\n  iterateList: iterateList,\n  getListSize: getListSize,\n  isStorage: isStorage,\n  createStorage: createStorage,\n  addToStorage: addToStorage,\n  iterateStorage: iterateStorage,\n  getStorageSize: getStorageSize\n});\n\nvar convertArray = ((value, convertValue) => {\n  const result = createList();\n  value.forEach((item, index) => {\n    addToList(result, index, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertBoolean = (value => `${value}`);\n\nvar convertDate = (value => `Date(${value})`);\n\nvar convertError = ((value, convertValue) => {\n  const {\n    name,\n    message,\n    columnNumber,\n    fileName,\n    lineNumber\n  } = value;\n  const result = createStorage();\n  addToStorage(result, 'name', convertValue(name));\n  addToStorage(result, 'message', convertValue(message));\n  addToStorage(result, 'columnNumber', convertValue(columnNumber));\n  addToStorage(result, 'fileName', convertValue(fileName));\n  addToStorage(result, 'lineNumber', convertValue(lineNumber));\n  setCustomClassNameTo(result, name || 'Error');\n  return result;\n});\n\nvar convertFunction = (value => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const type = getClass.getClassName(value) || 'Function';\n  let {\n    name\n  } = value;\n\n  if (!name) {\n    name = content.substr(content.substr(0, 9) === 'function ' ? 9 : 0, MAX_FUNC_STR_LEN);\n  }\n\n  const result = createStorage();\n  addToStorage(result, 'content', content);\n  setCustomClassNameTo(result, // FIXME almost every function starts with \"function \", remove this from short string\n  `${type}(${name})`);\n  return result;\n});\n\nvar convertMap = ((value, convertValue) => {\n  const result = createStorage();\n  value.forEach((item, key) => {\n    /*\n    Do not use keyNeedsConversion() here, because Map may hold values of\n    different types as keys and string should be quoted, otherwise it may be\n    unclear -- what you see string true or boolean true as key.\n    */\n    addToStorage(result, convertValue(key), convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertNumber = (value => `${value}`);\n\nvar convertObject = ((value, convertValue) => {\n  const result = createStorage();\n  Object.keys(value).forEach(key => {\n    addToStorage(result, keyNeedsConversion(key) ? convertValue(key) : key, convertValue(value[key]));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertSet = ((value, convertValue) => {\n  const result = createList(); // remove need in indexes for Set\n\n  let index = 0;\n  value.forEach(item => {\n    addToList(result, index++, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertString = (value => JSON.stringify(value));\n\nvar convertSymbol = (value => String(value));\n\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\n\nconst addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\nconst hasTypeHandler = constructor => types.has(constructor);\nconst getTypeHandler = constructor => types.get(constructor);\nconst removeTypeHandler = constructor => types.delete(constructor);\nconst defaultTypeHandlerSelector = value => {\n  const type = getClass__default(value);\n  return type && getTypeHandler(type);\n};\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\n\nconst selectTypeHandler = value => typeHandlerSelector(value);\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\n\nconst setTypeHandlerSelector = newSelector => {\n  typeHandlerSelector = newSelector;\n};\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n\nconst {\n  get: getMaxNesingDepth,\n  set: setMaxNesingDepth\n} = closureValue.singleValueFactory(2);\n\nconst isString = value => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n\n    default:\n      return value === null || value instanceof Date;\n  }\n};\nconst toString = value => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n\n    case 'string':\n      return convertString(value);\n\n    case 'boolean':\n      return convertBoolean(value);\n\n    case 'number':\n      return convertNumber(value);\n\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      return `${value}`;\n  }\n};\n\nconst fallbackConversion = (value, convertValue, refs) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value, convertValue, refs);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue, refs);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue, refs);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue, refs);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue, refs);\n  }\n\n  return convertObject(value, convertValue, refs);\n};\n\nconst convert = (value, level = 1, refs = new Map()) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const maxLevel = getMaxNesingDepth();\n\n  if (level > maxLevel) {\n    return toString(value);\n  }\n\n  const complex = !isString(value);\n\n  if (complex && refs.has(value)) {\n    return refs.get(value);\n  }\n\n  const handler = selectTypeHandler(value);\n\n  const nextConvert = propValue => convert(propValue, level + 1, refs);\n\n  let result;\n\n  if (handler) {\n    result = handler(value, nextConvert, refs);\n  }\n\n  result = fallbackConversion(value, nextConvert, refs);\n\n  if (complex) {\n    refs.set(value, result);\n  }\n\n  return result;\n};\n\nexports.default = convert;\nexports.utils = utils;\nexports.addTypeHandler = addTypeHandler;\nexports.getTypeHandler = getTypeHandler;\nexports.hasTypeHandler = hasTypeHandler;\nexports.removeTypeHandler = removeTypeHandler;\nexports.setTypeHandlerSelector = setTypeHandlerSelector;\nexports.isString = isString;\nexports.toString = toString;\nexports.convert = convert;\nexports.getMaxNesingDepth = getMaxNesingDepth;\nexports.setMaxNesingDepth = setMaxNesingDepth;\n//# sourceMappingURL=index.js.map\n","import { utils } from '@actualwave/log-data-renderer';\n\nconst { isList, getCustomClassNameFrom } = utils;\n\nexport const SPACE_LEVEL = '  ';\n\nexport const INFO_TYPE = 'info';\nexport const LOG_TYPE = 'log';\nexport const WARNING_TYPE = 'warning';\nexport const ERROR_TYPE = 'error';\nexport const SUCCESS_TYPE = 'success';\n\nexport const getStringWrap = (value) => {\n  let pre;\n  let post;\n  const name = getCustomClassNameFrom(value);\n\n  if (isList(value)) {\n    pre = '[';\n    post = ']';\n  } else {\n    pre = '{';\n    post = '}';\n  }\n\n  pre = `${name}${pre}`;\n\n  return { pre, post };\n};\n\nexport const removeAllChildren = (target) => {\n  while (target.firstChild) {\n    target.removeChild(target.firstChild);\n  }\n};\n","/* eslint-disable no-use-before-define */\nimport { utils } from '@actualwave/log-data-renderer';\nimport { SPACE_LEVEL, getStringWrap, removeAllChildren } from './utils';\n\nconst { iterateStorage, isNested, isList, iterateList } = utils;\n\nconst setExpandIconSymbol = (icon, expanded) => {\n  icon.innerHTML = expanded ? '-' : '+';\n};\n\nconst createExpandIcon = (expanded) => {\n  const icon = document.createElement('span');\n  icon.className = 'ui-console-button-expand';\n\n  setExpandIconSymbol(icon, expanded);\n\n  return icon;\n};\n\nconst createCollapsedContent = () => [document.createTextNode(' ... ')];\n\nconst createUINestedArrayContent = (list, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateList(list, (value) => {\n    text += space;\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedObjectContent = (storage, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateStorage(storage, (value, key) => {\n    text += `${space}`;\n\n    if (isNested(key)) {\n      result.push(document.createTextNode(`${text}[`));\n      result.push(createUINested(key, space));\n      text = ']';\n    } else {\n      text += key;\n    }\n\n    text += ': ';\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      result.push(createUINested(value, space));\n      text = '';\n    } else {\n      text += value;\n    }\n\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedContent = (value, initSpace) => {\n  const space = `${SPACE_LEVEL}${initSpace}`;\n\n  if (isList(value)) {\n    return createUINestedArrayContent(value, space);\n  }\n\n  return createUINestedObjectContent(value, space);\n};\n\nexport function createUINested(value, space = '', initExpanded = false) {\n  let expanded = initExpanded;\n  let contentExpanded;\n  const contentCollapsed = createCollapsedContent();\n\n  const { pre, post } = getStringWrap(value);\n  const icon = createExpandIcon(expanded);\n  const wrapper = document.createElement('span');\n\n  wrapper.className = 'ui-console-nested-wrapper';\n\n  const link = document.createElement('span');\n  link.className = 'ui-console-clickable';\n  link.appendChild(icon);\n  link.appendChild(document.createTextNode(pre));\n\n  const drawContents = () => {\n    let content;\n\n    removeAllChildren(wrapper);\n\n    wrapper.appendChild(link);\n\n    if (expanded) {\n      if (!contentExpanded) {\n        contentExpanded = createUINestedContent(value, space);\n      }\n\n      content = contentExpanded;\n    } else {\n      content = contentCollapsed;\n    }\n\n    content.forEach((node) => wrapper.appendChild(node));\n\n    wrapper.appendChild(\n      document.createTextNode(expanded ? `${space}${post}` : post),\n    );\n  };\n\n  link.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    expanded = !expanded;\n\n    setExpandIconSymbol(icon, expanded);\n    drawContents();\n  });\n\n  drawContents();\n\n  return wrapper;\n}\n","\nimport convert, { utils } from '@actualwave/log-data-renderer';\nimport { createUINested } from './nested';\n\nconst { isNested, canPassAsIs } = utils;\n\nconst createSimpleValue = (value) => document.createTextNode(`${value} `);\n\nexport const buildContent = (content, item) => {\n  content.forEach((value) => {\n    if (canPassAsIs(value)) {\n      // shortcut for log strings to not wrap them with quotes\n      item.appendChild(createSimpleValue(value));\n      return;\n    }\n\n    const result = convert(value);\n\n    if (isNested(result)) {\n      item.appendChild(createUINested(result, '', true));\n    } else {\n      item.appendChild(createSimpleValue(result));\n    }\n  });\n\n  return item;\n};\n","import {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n} from '@actualwave/log-data-renderer';\n\nimport {\n  INFO_TYPE,\n  LOG_TYPE,\n  WARNING_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE,\n} from './utils';\n\nimport { buildContent } from './dom';\n\nexport const init = (container, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const shiftOverMax = () => {\n    while (maxItems > 0 && maxItems < container.childElementCount) {\n      const child = container.firstElementChild;\n      if (!child) {\n        return;\n      }\n\n      child.remove();\n    }\n  };\n\n  const pushItem = (content, type = LOG_TYPE) => {\n    const item = document.createElement('div');\n    item.className = `ui-console-item ui-console-item-${type}`;\n\n    buildContent(content, item);\n\n    container.appendChild(item);\n    shiftOverMax();\n  };\n\n  return {\n    info: (...content) => pushItem(content, INFO_TYPE),\n    log: (...content) => pushItem(content, LOG_TYPE),\n    warn: (...content) => pushItem(content, WARNING_TYPE),\n    error: (...content) => pushItem(content, ERROR_TYPE),\n    success: (...content) => pushItem(content, SUCCESS_TYPE),\n  };\n};\n\nexport const create = (wrapper, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const container = document.createElement('div');\n  container.className = 'ui-console ui-console-container';\n  wrapper.appendChild(container);\n\n  return init(container, maxItems);\n};\n\n/*\nCustomizable type representation\n */\nexport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n};\n"],"names":["getClass","isList","getCustomClassNameFrom","utils","SPACE_LEVEL","INFO_TYPE","LOG_TYPE","WARNING_TYPE","ERROR_TYPE","SUCCESS_TYPE","getStringWrap","value","pre","post","name","removeAllChildren","target","firstChild","removeChild","iterateStorage","isNested","iterateList","setExpandIconSymbol","icon","expanded","innerHTML","createExpandIcon","document","createElement","className","createCollapsedContent","createTextNode","createUINestedArrayContent","list","space","result","text","push","createUINested","createUINestedObjectContent","storage","key","createUINestedContent","initSpace","initExpanded","contentExpanded","contentCollapsed","wrapper","link","appendChild","drawContents","content","forEach","node","addEventListener","event","preventDefault","stopPropagation","canPassAsIs","createSimpleValue","buildContent","item","convert","init","container","maxItems","Number","MAX_SAFE_INTEGER","shiftOverMax","childElementCount","child","firstElementChild","remove","pushItem","type","info","log","warn","error","success","create"],"mappings":"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"}