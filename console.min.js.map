{"version":3,"file":"console.min.js","sources":["node_modules/@actualwave/get-class/get-class.js","node_modules/@actualwave/closure-value/closure-value.js","node_modules/@actualwave/log-data-renderer/index.js","source/utils.js","source/nested.js","source/dom.js","source/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n\n  const constructor = target.constructor;\n\n  if(\n    typeof constructor === 'function'\n    && target instanceof constructor\n  ) {\n    return target.constructor;\n  }\n\n  const proto = Object.getPrototypeOf(target);\n\n  if (proto && typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto || Object;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n\n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const valueClass = getClass(value);\n\n  return valueClass ? valueClass.name : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst singleValueFactory = (defaultValue = null, valueFormatter = (value) => value) => {\n  let value = defaultValue;\n\n  return {\n    getDefault: () => defaultValue,\n    get: () => value,\n    set: (newValue = defaultValue) => {\n      value = valueFormatter(newValue);\n    },\n  };\n};\n\nconst valuesMapFactory = (defaults = new Map(), valueFormatter = (key, value) => value) => {\n  const defaultValues = new Map(defaults);\n  const getDefault = () => new Map(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    copy: () => new Map(values),\n    delete: (key) => values.delete(key),\n    has: (key) => values.has(key),\n    set: (key, value) => values.set(key, valueFormatter(key, value)),\n    get: (key) => values.get(key),\n  };\n};\n\nconst valuesSetFactory = (defaults = new Set(), valueFormatter = (value) => value) => {\n  const defaultValues = new Set(defaults);\n  const getDefault = () => new Set(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    get: () => new Set(values),\n    delete: (value) => values.delete(value),\n    has: (value) => values.has(value),\n    add: (value) => values.add(valueFormatter(value)),\n  };\n};\n\nexports.singleValueFactory = singleValueFactory;\nexports.valuesMapFactory = valuesMapFactory;\nexports.valuesSetFactory = valuesSetFactory;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar getClass = require('@actualwave/get-class');\nvar getClass__default = _interopDefault(getClass);\nvar closureValue = require('@actualwave/closure-value');\n\n// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nconst MAX_FUNC_STR_LEN = 30;\nconst setCustomClassNameTo = (data, className) => data.className = className;\nconst getCustomClassNameFrom = data => data.className || '';\nconst canPassAsIs = value => typeof value === 'string';\nconst validKeyRgx = /^[\\w_$][\\w\\d_$]*$/i;\nconst keyNeedsConversion = key => !(canPassAsIs(key) && validKeyRgx.test(key));\nconst isNested = value => value && typeof value === 'object';\nconst setNestedWraps = (value, pre, post) => {\n  value.pre = pre;\n  value.post = post;\n};\nconst getNestedWraps = ({\n  pre,\n  post\n}) => ({\n  pre,\n  post\n});\nconst setNestedShortContent = (value, short) => {\n  value.short = short;\n};\nconst getNestedShortContent = value => value.short;\nconst isList = target => isNested(target) && target.type === 'list';\nconst createList = () => ({\n  type: 'list',\n  values: [],\n  pre: '[',\n  post: ']'\n});\nconst addToList = ({\n  values\n}, index, value) => values[index] = value;\nconst iterateList = ({\n  values\n}, handler) => values.forEach((value, index) => handler(value, index));\nconst getListSize = ({\n  values\n}) => values.length;\nconst isStorage = target => isNested(value) && target.type === 'storage';\nconst createStorage = () => ({\n  type: 'storage',\n  keys: [],\n  values: [],\n  pre: '{',\n  post: '}'\n});\nconst addToStorage = ({\n  keys,\n  values\n}, key, value) => {\n  keys.push(key);\n  values.push(value);\n};\nconst iterateStorage = (storage, handler) => {\n  const {\n    keys,\n    values\n  } = storage;\n  keys.forEach((key, index) => handler(values[index], key));\n};\nconst getStorageSize = ({\n  keys\n}) => keys.length;\n\nvar utils = /*#__PURE__*/Object.freeze({\n  MAX_FUNC_STR_LEN: MAX_FUNC_STR_LEN,\n  setCustomClassNameTo: setCustomClassNameTo,\n  getCustomClassNameFrom: getCustomClassNameFrom,\n  canPassAsIs: canPassAsIs,\n  keyNeedsConversion: keyNeedsConversion,\n  isNested: isNested,\n  setNestedWraps: setNestedWraps,\n  getNestedWraps: getNestedWraps,\n  setNestedShortContent: setNestedShortContent,\n  getNestedShortContent: getNestedShortContent,\n  isList: isList,\n  createList: createList,\n  addToList: addToList,\n  iterateList: iterateList,\n  getListSize: getListSize,\n  isStorage: isStorage,\n  createStorage: createStorage,\n  addToStorage: addToStorage,\n  iterateStorage: iterateStorage,\n  getStorageSize: getStorageSize\n});\n\nvar convertArray = ((value, convertValue) => {\n  const result = createList();\n  value.forEach((item, index) => {\n    addToList(result, index, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertBoolean = (value => `${value}`);\n\nvar convertDate = (value => `Date(${value})`);\n\nvar convertError = ((value, convertValue) => {\n  const {\n    name,\n    message,\n    columnNumber,\n    fileName,\n    lineNumber\n  } = value;\n  const result = createStorage();\n  addToStorage(result, 'name', convertValue(name));\n  addToStorage(result, 'message', convertValue(message));\n  addToStorage(result, 'columnNumber', convertValue(columnNumber));\n  addToStorage(result, 'fileName', convertValue(fileName));\n  addToStorage(result, 'lineNumber', convertValue(lineNumber));\n  setCustomClassNameTo(result, name || 'Error');\n  return result;\n});\n\nvar convertFunction = (value => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const type = getClass.getClassName(value) || 'Function';\n  let {\n    name\n  } = value;\n\n  if (!name) {\n    name = content.replace(/\\s+/g, ' ').substr(content.substr(0, 9) === 'function ' ? 9 : 0, MAX_FUNC_STR_LEN);\n\n    if (content.length < MAX_FUNC_STR_LEN) {\n      name = `${name}...`;\n    }\n  }\n\n  const result = createStorage();\n  addToStorage(result, 'code', content);\n  setNestedWraps(result, '(', ')');\n  setNestedShortContent(result, name);\n  setCustomClassNameTo(result, type);\n  return result;\n});\n\nvar convertMap = ((value, convertValue) => {\n  const result = createStorage();\n  value.forEach((item, key) => {\n    /*\n    Do not use keyNeedsConversion() here, because Map may hold values of\n    different types as keys and string should be quoted, otherwise it may be\n    unclear -- what you see string true or boolean true as key.\n    */\n    addToStorage(result, convertValue(key), convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertNumber = (value => `${value}`);\n\nvar convertObject = ((value, convertValue) => {\n  const result = createStorage();\n  Object.keys(value).forEach(key => {\n    addToStorage(result, keyNeedsConversion(key) ? convertValue(key) : key, convertValue(value[key]));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertSet = ((value, convertValue) => {\n  const result = createList(); // remove need in indexes for Set\n\n  let index = 0;\n  value.forEach(item => {\n    addToList(result, index++, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertString = (value => JSON.stringify(value));\n\nvar convertSymbol = (value => String(value));\n\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\n\nconst addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\nconst hasTypeHandler = constructor => types.has(constructor);\nconst getTypeHandler = constructor => types.get(constructor);\nconst removeTypeHandler = constructor => types.delete(constructor);\nconst defaultTypeHandlerSelector = value => {\n  const type = getClass__default(value);\n  return type && getTypeHandler(type);\n};\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\n\nconst selectTypeHandler = value => typeHandlerSelector(value);\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\n\nconst setTypeHandlerSelector = newSelector => {\n  typeHandlerSelector = newSelector;\n};\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n\nconst {\n  get: getMaxNesingDepth,\n  set: setMaxNesingDepth\n} = closureValue.singleValueFactory(2);\n\nconst isString = value => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n\n    default:\n      return value === null || value instanceof Date;\n  }\n};\nconst toString = value => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n\n    case 'string':\n      return convertString(value);\n\n    case 'boolean':\n      return convertBoolean(value);\n\n    case 'number':\n      return convertNumber(value);\n\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      return `${value}`;\n  }\n};\n\nconst fallbackConversion = (value, convertValue, refs) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value, convertValue, refs);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue, refs);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue, refs);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue, refs);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue, refs);\n  }\n\n  return convertObject(value, convertValue, refs);\n};\n\nconst convert = (value, level = 1, refs = new Map()) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const maxLevel = getMaxNesingDepth();\n\n  if (level > maxLevel) {\n    return toString(value);\n  }\n\n  const complex = !isString(value);\n\n  if (complex && refs.has(value)) {\n    return refs.get(value);\n  }\n\n  const handler = selectTypeHandler(value);\n\n  const nextConvert = propValue => convert(propValue, level + 1, refs);\n\n  let result;\n\n  if (handler) {\n    result = handler(value, nextConvert, refs);\n  }\n\n  result = fallbackConversion(value, nextConvert, refs);\n\n  if (complex) {\n    refs.set(value, result);\n  }\n\n  return result;\n};\n\nexports.default = convert;\nexports.utils = utils;\nexports.addTypeHandler = addTypeHandler;\nexports.getTypeHandler = getTypeHandler;\nexports.hasTypeHandler = hasTypeHandler;\nexports.removeTypeHandler = removeTypeHandler;\nexports.setTypeHandlerSelector = setTypeHandlerSelector;\nexports.isString = isString;\nexports.toString = toString;\nexports.convert = convert;\nexports.getMaxNesingDepth = getMaxNesingDepth;\nexports.setMaxNesingDepth = setMaxNesingDepth;\n//# sourceMappingURL=index.js.map\n","import { utils } from '@actualwave/log-data-renderer';\n\nconst { isList, getListSize, getNestedWraps, getCustomClassNameFrom } = utils;\n\nexport const SPACE_LEVEL = '  ';\n\nexport const INFO_TYPE = 'info';\nexport const LOG_TYPE = 'log';\nexport const WARNING_TYPE = 'warning';\nexport const ERROR_TYPE = 'error';\nexport const SUCCESS_TYPE = 'success';\n\nexport const getStringWrap = (value) => {\n  const wraps = getNestedWraps(value);\n\n  const name = getCustomClassNameFrom(value);\n\n  if (isList(value)) {\n    wraps.pre = `${name}(${getListSize(value)})${wraps.pre}`;\n  } else {\n    wraps.pre = `${name}${wraps.pre}`;\n  }\n\n  return wraps;\n};\n\nexport const removeAllChildren = (target) => {\n  while (target.firstChild) {\n    target.removeChild(target.firstChild);\n  }\n};\n","/* eslint-disable no-use-before-define */\nimport { utils } from '@actualwave/log-data-renderer';\nimport { SPACE_LEVEL, getStringWrap, removeAllChildren } from './utils';\n\nconst {\n  iterateStorage,\n  isNested,\n  isList,\n  iterateList,\n  getNestedShortContent,\n  getNestedWraps,\n  getListSize,\n  getStorageSize,\n} = utils;\n\nconst setExpandIconSymbol = (icon, expanded) => {\n  icon.innerHTML = expanded ? '-' : '+';\n};\n\nconst createExpandIcon = (expanded) => {\n  const icon = document.createElement('span');\n  icon.className = 'ui-console-button-expand';\n\n  setExpandIconSymbol(icon, expanded);\n\n  return icon;\n};\n\nconst createCollapsedContent = (value, size) => {\n  let content = getNestedShortContent(value);\n\n  if (content === undefined) {\n    content = size ? ' ... ' : '';\n  }\n\n  return [document.createTextNode(content)];\n};\n\nconst createUINestedArrayContent = (list, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateList(list, (value) => {\n    text += space;\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedObjectContent = (storage, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateStorage(storage, (value, key) => {\n    text += `${space}`;\n\n    if (isNested(key)) {\n      result.push(document.createTextNode(`${text}[`));\n      result.push(createUINested(key, space));\n      text = ']';\n    } else {\n      text += key;\n    }\n\n    text += ': ';\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      result.push(createUINested(value, space));\n      text = '';\n    } else {\n      text += value;\n    }\n\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedContent = (value, initSpace) => {\n  const space = `${SPACE_LEVEL}${initSpace}`;\n\n  if (isList(value)) {\n    return createUINestedArrayContent(value, space);\n  }\n\n  return createUINestedObjectContent(value, space);\n};\n\nexport function createUINested(value, space = '', initExpanded = false) {\n  const size = isList(value) ? getListSize(value) : getStorageSize(value);\n  let expanded = initExpanded && !!size;\n  let contentExpanded;\n  const contentCollapsed = createCollapsedContent(value, size);\n  const { pre, post } = getStringWrap(value);\n  const icon = createExpandIcon(expanded);\n  const wrapper = document.createElement('span');\n\n  wrapper.className = 'ui-console-nested-wrapper';\n\n  const link = document.createElement('span');\n  link.className = 'ui-console-clickable';\n  link.appendChild(icon);\n  link.appendChild(document.createTextNode(pre));\n\n  const drawContents = () => {\n    let content;\n\n    removeAllChildren(wrapper);\n\n    wrapper.appendChild(link);\n\n    if (expanded) {\n      if (!contentExpanded) {\n        contentExpanded = createUINestedContent(value, space);\n      }\n\n      content = contentExpanded;\n    } else {\n      content = contentCollapsed;\n    }\n\n    content.forEach((node) => wrapper.appendChild(node));\n\n    wrapper.appendChild(\n      document.createTextNode(expanded ? `${space}${post}` : post),\n    );\n  };\n\n  link.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    expanded = !expanded;\n\n    setExpandIconSymbol(icon, expanded);\n    drawContents();\n  });\n\n  drawContents();\n\n  return wrapper;\n}\n","\nimport convert, { utils } from '@actualwave/log-data-renderer';\nimport { createUINested } from './nested';\n\nconst { isNested, canPassAsIs } = utils;\n\nconst createSimpleValue = (value) => document.createTextNode(`${value} `);\n\nexport const buildContent = (content, item, converted = false) => {\n  content.forEach((value) => {\n    if (!converted && canPassAsIs(value)) {\n      // shortcut for log strings to not wrap them with quotes\n      item.appendChild(createSimpleValue(value));\n      return;\n    }\n\n    const result = converted ? value : convert(value);\n\n    if (isNested(result)) {\n      item.appendChild(createUINested(result, '', true));\n    } else {\n      item.appendChild(createSimpleValue(result));\n    }\n  });\n\n  return item;\n};\n","import {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n} from '@actualwave/log-data-renderer';\n\nimport {\n  INFO_TYPE,\n  LOG_TYPE,\n  WARNING_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE,\n} from './utils';\n\nimport { buildContent } from './dom';\n\nexport const init = (container, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const shiftOverMax = () => {\n    while (maxItems > 0 && maxItems < container.childElementCount) {\n      const child = container.firstElementChild;\n      if (!child) {\n        return;\n      }\n\n      child.remove();\n    }\n  };\n\n  const pushItem = (content, type = LOG_TYPE, converted = false) => {\n    const item = document.createElement('div');\n    item.className = `ui-console-item ui-console-item-${type}`;\n\n    buildContent(content, item, converted);\n\n    container.appendChild(item);\n    shiftOverMax();\n  };\n\n  return {\n    info: (...content) => pushItem(content, INFO_TYPE),\n    log: (...content) => pushItem(content, LOG_TYPE),\n    warn: (...content) => pushItem(content, WARNING_TYPE),\n    error: (...content) => pushItem(content, ERROR_TYPE),\n    success: (...content) => pushItem(content, SUCCESS_TYPE),\n    push: (type, ...content) => pushItem(content, type),\n    pushRendered: (type, ...content) => pushItem(content, type, true),\n  };\n};\n\nexport const create = (wrapper, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const container = document.createElement('div');\n  container.className = 'ui-console ui-console-container';\n  wrapper.appendChild(container);\n\n  return init(container, maxItems);\n};\n\n/*\nCustomizable type representation\n */\nexport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n};\n"],"names":["Object","defineProperty","exports","value","getClass","target","constructor","proto","getPrototypeOf","valueClass","name","def","defaultValue","valueFormatter","getDefault","get","set","newValue","defaults","Map","key","defaultValues","values","copy","delete","has","Set","add","ex","getClass__default","setCustomClassNameTo","data","className","canPassAsIs","validKeyRgx","keyNeedsConversion","test","isNested","setNestedWraps","pre","post","setNestedShortContent","short","createList","type","addToList","index","createStorage","keys","addToStorage","push","utils","freeze","MAX_FUNC_STR_LEN","getCustomClassNameFrom","getNestedWraps","getNestedShortContent","isList","iterateList","handler","forEach","getListSize","length","isStorage","iterateStorage","storage","getStorageSize","convertArray","convertValue","result","item","getClassName","convertBoolean","convertDate","convertError","message","columnNumber","fileName","lineNumber","convertFunction","content","String","replace","substr","convertMap","convertNumber","convertObject","convertSet","convertString","JSON","stringify","convertSymbol","types","addTypeHandler","getTypeHandler","typeHandlerSelector","Array","Boolean","Date","Error","Function","Number","Symbol","getMaxNesingDepth","setMaxNesingDepth","closureValue","singleValueFactory","isString","toString","convert","level","refs","maxLevel","complex","selectTypeHandler","nextConvert","propValue","fallbackConversion","newSelector","setExpandIconSymbol","icon","expanded","innerHTML","createUINestedContent","initSpace","space","list","text","document","createTextNode","createUINested","createUINestedArrayContent","createUINestedObjectContent","initExpanded","size","contentExpanded","contentCollapsed","undefined","createCollapsedContent","wraps","getStringWrap","createElement","createExpandIcon","wrapper","link","appendChild","drawContents","firstChild","removeChild","removeAllChildren","node","addEventListener","event","preventDefault","stopPropagation","createSimpleValue","init","container","maxItems","MAX_SAFE_INTEGER","pushItem","converted","buildContent","childElementCount","child","firstElementChild","remove","shiftOverMax","info","log","warn","error","success","pushRendered"],"mappings":"ykBAEAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,MAAMC,EAAYC,IAChB,GAAGA,MAAAA,EACD,OAGF,MAAMC,EAAcD,EAAOC,YAE3B,GACyB,mBAAhBA,GACJD,aAAkBC,EAErB,OAAOD,EAAOC,YAGhB,MAAMC,EAAQP,OAAOQ,eAAeH,GAEpC,OAAIE,GAA0B,iBAAVA,EACXA,EAAMD,YAGRC,GAASP,QAiBlBE,eARsBC,IACpB,IAAKA,EAAO,MAAO,GAEnB,MAAMM,EAAaL,EAASD,GAE5B,OAAOM,EAAaA,EAAWC,KAAO,IAIxCR,iBAfwBG,IACtB,MAAMM,EAAMP,EAASC,GAErB,OAAOM,GAAOX,OAAOQ,eAAeG,IAatCT,WAAmBE,EACnBF,UAAkBE,wBC1ClBJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IA+CtDD,qBA7C2B,CAACU,EAAe,KAAMC,EAAiB,CAACV,GAAUA,MAC3E,IAAIA,EAAQS,EAEZ,MAAO,CACLE,WAAY,IAAMF,EAClBG,IAAK,IAAMZ,EACXa,IAAK,CAACC,EAAWL,KACfT,EAAQU,EAAeI,MAuC7Bf,mBAlCyB,CAACgB,EAAW,IAAIC,IAAON,EAAiB,EAACO,EAAKjB,IAAUA,MAC/E,MAAMkB,EAAgB,IAAIF,IAAID,GACxBJ,EAAa,IAAM,IAAIK,IAAIE,GAE3BC,EAASR,IAEf,MAAO,CACLQ,OAAAA,EACAR,WAAAA,EACAS,KAAM,IAAM,IAAIJ,IAAIG,GACpBE,OAASJ,GAAQE,EAAOE,OAAOJ,GAC/BK,IAAML,GAAQE,EAAOG,IAAIL,GACzBJ,IAAK,CAACI,EAAKjB,IAAUmB,EAAON,IAAII,EAAKP,EAAeO,EAAKjB,IACzDY,IAAMK,GAAQE,EAAOP,IAAIK,KAsB7BlB,mBAlByB,CAACgB,EAAW,IAAIQ,IAAOb,EAAiB,CAACV,GAAUA,MAC1E,MAAMkB,EAAgB,IAAIK,IAAIR,GACxBJ,EAAa,IAAM,IAAIY,IAAIL,GAE3BC,EAASR,IAEf,MAAO,CACLQ,OAAAA,EACAR,WAAAA,EACAC,IAAK,IAAM,IAAIW,IAAIJ,GACnBE,OAASrB,GAAUmB,EAAOE,OAAOrB,GACjCsB,IAAMtB,GAAUmB,EAAOG,IAAItB,GAC3BwB,IAAMxB,GAAUmB,EAAOK,IAAId,EAAeV,4BC3C9CH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAKtD,IAH0ByB,EAGtBC,GAHsBD,EAGcxB,IAHqB,iBAAPwB,GAAoB,YAAaA,EAAMA,EAAY,QAAIA,EAQ7G,MACME,EAAuB,CAACC,EAAMC,IAAcD,EAAKC,UAAYA,EAE7DC,EAAc9B,GAA0B,iBAAVA,EAC9B+B,EAAc,qBACdC,EAAqBf,KAASa,EAAYb,IAAQc,EAAYE,KAAKhB,IACnEiB,EAAWlC,GAASA,GAA0B,iBAAVA,EACpCmC,EAAiB,CAACnC,EAAOoC,EAAKC,KAClCrC,EAAMoC,IAAMA,EACZpC,EAAMqC,KAAOA,GASTC,EAAwB,CAACtC,EAAOuC,KACpCvC,EAAMuC,MAAQA,GAIVC,EAAa,MACjBC,KAAM,OACNtB,OAAQ,GACRiB,IAAK,IACLC,KAAM,MAEFK,EAAY,EAChBvB,OAAAA,GACCwB,EAAO3C,IAAUmB,EAAOwB,GAAS3C,EAQ9B4C,EAAgB,MACpBH,KAAM,UACNI,KAAM,GACN1B,OAAQ,GACRiB,IAAK,IACLC,KAAM,MAEFS,EAAe,EACnBD,KAAAA,EACA1B,OAAAA,GACCF,EAAKjB,KACN6C,EAAKE,KAAK9B,GACVE,EAAO4B,KAAK/C,IAad,IAAIgD,EAAqBnD,OAAOoD,OAAO,CACrCC,iBAjEuB,GAkEvBvB,qBAAsBA,EACtBwB,uBAjE6BvB,GAAQA,EAAKC,WAAa,GAkEvDC,YAAaA,EACbE,mBAAoBA,EACpBE,SAAUA,EACVC,eAAgBA,EAChBiB,eA7DqB,EACrBhB,IAAAA,EACAC,KAAAA,OAEAD,IAAAA,EACAC,KAAAA,IAyDAC,sBAAuBA,EACvBe,sBArD4BrD,GAASA,EAAMuC,MAsD3Ce,OArDapD,GAAUgC,EAAShC,IAA2B,SAAhBA,EAAOuC,KAsDlDD,WAAYA,EACZE,UAAWA,EACXa,YA9CkB,EAClBpC,OAAAA,GACCqC,IAAYrC,EAAOsC,QAAQ,CAACzD,EAAO2C,IAAUa,EAAQxD,EAAO2C,IA6C7De,YA5CkB,EAClBvC,OAAAA,KACIA,EAAOwC,OA2CXC,UA1CgB1D,GAAUgC,EAASlC,QAA0B,YAAhBE,EAAOuC,KA2CpDG,cAAeA,EACfE,aAAcA,EACde,eA9BqB,CAACC,EAASN,KAC/B,MAAMX,KACJA,EAAI1B,OACJA,GACE2C,EACJjB,EAAKY,QAAQ,CAACxC,EAAK0B,IAAUa,EAAQrC,EAAOwB,GAAQ1B,KA0BpD8C,eAxBqB,EACrBlB,KAAAA,KACIA,EAAKc,SAyBPK,GAAiBhE,EAAOiE,KAC1B,MAAMC,GAhENzB,KAAM,OACNtB,OAAQ,GACRiB,IAAK,IACLC,KAAM,KAkEN,OAJArC,EAAMyD,QAAQ,CAACU,EAAMxB,KACnBD,EAAUwB,EAAQvB,EAAOsB,EAAaE,MAExCxC,EAAqBuC,EAAQjE,EAASmE,aAAapE,IAC5CkE,GAGLG,EAAkBrE,GAAS,GAAGA,EAE9BsE,EAAetE,GAAS,QAAQA,KAEhCuE,GAAiBvE,EAAOiE,KAC1B,MAAM1D,KACJA,EAAIiE,QACJA,EAAOC,aACPA,EAAYC,SACZA,EAAQC,WACRA,GACE3E,EACEkE,GApENzB,KAAM,UACNI,KAAM,GACN1B,OAAQ,GACRiB,IAAK,IACLC,KAAM,KAuEN,OANAS,EAAaoB,EAAQ,OAAQD,EAAa1D,IAC1CuC,EAAaoB,EAAQ,UAAWD,EAAaO,IAC7C1B,EAAaoB,EAAQ,eAAgBD,EAAaQ,IAClD3B,EAAaoB,EAAQ,WAAYD,EAAaS,IAC9C5B,EAAaoB,EAAQ,aAAcD,EAAaU,IAChDhD,EAAqBuC,EAAQ3D,GAAQ,SAC9B2D,GAGLU,EAAmB5E,IACrB,MAAM6E,EAAUC,OAAO9E,GAEvB,GAAI6E,EAAQlB,QAzHW,GA0HrB,OAAOkB,EAGT,MAAMpC,EAAOxC,EAASmE,aAAapE,IAAU,WAC7C,IAAIO,KACFA,GACEP,EAECO,IACHA,EAAOsE,EAAQE,QAAQ,OAAQ,KAAKC,OAAgC,cAAzBH,EAAQG,OAAO,EAAG,GAAqB,EAAI,EAnIjE,IAqIjBH,EAAQlB,OArIS,KAsInBpD,GAAO,QAIX,MAAM2D,GAlGNzB,KAAM,UACNI,KAAM,GACN1B,OAAQ,GACRiB,IAAK,IACLC,KAAM,KAmGN,OAJAS,EAAaoB,EAAQ,OAAQW,GAC7B1C,EAAe+B,EAAQ,IAAK,KAC5B5B,EAAsB4B,EAAQ3D,GAC9BoB,EAAqBuC,EAAQzB,GACtByB,GAGLe,GAAejF,EAAOiE,KACxB,MAAMC,GA3GNzB,KAAM,UACNI,KAAM,GACN1B,OAAQ,GACRiB,IAAK,IACLC,KAAM,KAiHN,OATArC,EAAMyD,QAAQ,CAACU,EAAMlD,KAMnB6B,EAAaoB,EAAQD,EAAahD,GAAMgD,EAAaE,MAEvDxC,EAAqBuC,EAAQjE,EAASmE,aAAapE,IAC5CkE,GAGLgB,EAAiBlF,GAAS,GAAGA,EAE7BmF,GAAkBnF,EAAOiE,KAC3B,MAAMC,GA3HNzB,KAAM,UACNI,KAAM,GACN1B,OAAQ,GACRiB,IAAK,IACLC,KAAM,KA4HN,OAJAxC,OAAOgD,KAAK7C,GAAOyD,QAAQxC,IACzB6B,EAAaoB,EAAQlC,EAAmBf,GAAOgD,EAAahD,GAAOA,EAAKgD,EAAajE,EAAMiB,OAE7FU,EAAqBuC,EAAQjE,EAASmE,aAAapE,IAC5CkE,GAGLkB,GAAepF,EAAOiE,KACxB,MAAMC,GApJNzB,KAAM,OACNtB,OAAQ,GACRiB,IAAK,IACLC,KAAM,KAmJN,IAAIM,EAAQ,EAKZ,OAJA3C,EAAMyD,QAAQU,IACZzB,EAAUwB,EAAQvB,IAASsB,EAAaE,MAE1CxC,EAAqBuC,EAAQjE,EAASmE,aAAapE,IAC5CkE,GAGLmB,EAAiBrF,GAASsF,KAAKC,UAAUvF,GAEzCwF,EAAiBxF,GAAS8E,OAAO9E,GAKrC,MAAMyF,EAAQ,IAAIzE,IAOZ0E,EAAiB,CAACvF,EAAaqD,KAC/BrD,GAAeqD,IACjBiC,EAAMpE,OAAOlB,GACbsF,EAAM5E,IAAIV,EAAaqD,KAIrBmC,EAAiBxF,GAAesF,EAAM7E,IAAIT,GAMhD,IAAIyF,EAJ+B5F,IACjC,MAAMyC,EAAOf,EAAkB1B,GAC/B,OAAOyC,GAAQkD,EAAelD,IAkBhCiD,EAAeG,MAAO7B,GACtB0B,EAAeI,QAASzB,GACxBqB,EAAeK,KAAMzB,GACrBoB,EAAeM,MAAOzB,GACtBmB,EAAeO,SAAUrB,GACzBc,EAAe1E,IAAKiE,GACpBS,EAAeQ,OAAQhB,GACvBQ,EAAe7F,OAAQsF,GACvBO,EAAenE,IAAK6D,GACpBM,EAAeZ,OAAQO,GACvBK,EAAeS,OAAQX,GAEvB,MACE5E,IAAKwF,EACLvF,IAAKwF,GACHC,EAAaC,mBAAmB,GAE9BC,EAAWxG,IACf,cAAeA,GACb,IAAK,SACL,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAO,EAET,QACE,OAAiB,OAAVA,GAAkBA,aAAiB+F,OAG1CU,EAAWzG,IACf,cAAeA,GACb,IAAK,SACH,OAAOwF,EAAcxF,GAEvB,IAAK,SACH,OAAOqF,EAAcrF,GAEvB,IAAK,UACH,OAAOqE,EAAerE,GAExB,IAAK,SACH,OAAOkF,EAAclF,GAEvB,QACE,OAAIA,aAAiB+F,KACZzB,EAAYtE,GAGd,GAAGA,IAgCV0G,EAAU,CAAC1G,EAAO2G,EAAQ,EAAGC,EAAO,IAAI5F,OAC5C,GAAIhB,MAAAA,EACF,MAAO,GAAGA,EAGZ,MAAM6G,EAAWT,IAEjB,GAAIO,EAAQE,EACV,OAAOJ,EAASzG,GAGlB,MAAM8G,GAAWN,EAASxG,GAE1B,GAAI8G,GAAWF,EAAKtF,IAAItB,GACtB,OAAO4G,EAAKhG,IAAIZ,GAGlB,MAAMwD,EA5GkBxD,CAAAA,GAAS4F,EAAoB5F,GA4GrC+G,CAAkB/G,GAE5BgH,EAAcC,GAAaP,EAAQO,EAAWN,EAAQ,EAAGC,GAE/D,IAAI1C,EAYJ,OAVIV,IACFU,EAASV,EAAQxD,EAAOgH,EAAaJ,IAGvC1C,EAvDyB,EAAClE,EAAOiE,EAAc2C,IAC3CJ,EAASxG,GACJyG,EAASzG,GAGdA,aAAiBiG,SACZrB,EAAgB5E,GAGrBA,aAAiBgG,MACZzB,EAAavE,EAAOiE,GAGzBjE,aAAiBgB,IACZiE,EAAWjF,EAAOiE,GAGvBjE,aAAiBuB,IACZ6D,EAAWpF,EAAOiE,GAGvBjE,aAAiB6F,MACZ7B,EAAahE,EAAOiE,GAGtBkB,EAAcnF,EAAOiE,GA8BnBiD,CAAmBlH,EAAOgH,GAE/BF,GACFF,EAAK/F,IAAIb,EAAOkE,GAGXA,GAGTnE,UAAkB2G,EAClB3G,QAAgBiD,EAChBjD,iBAAyB2F,EACzB3F,iBAAyB4F,EACzB5F,iBAhJuBI,GAAesF,EAAMnE,IAAInB,GAiJhDJ,oBA/I0BI,GAAesF,EAAMpE,OAAOlB,GAgJtDJ,yBA9H+BoH,IAC7BvB,EAAsBuB,GA8HxBpH,WAAmByG,EACnBzG,WAAmB0G,EACnB1G,UAAkB2G,EAClB3G,oBAA4BqG,EAC5BrG,oBAA4BsG,YC3W5B,MAAM/C,OAAEA,EAAFI,YAAUA,EAAVN,eAAuBA,EAAvBD,uBAAuCA,GAA2BH,SCElEa,eACJA,EADI3B,SAEJA,SACAoB,EAHIC,YAIJA,EAJIF,sBAKJA,iBACAD,cACAM,EAPIK,eAQJA,GACEf,QAEEoE,EAAsB,CAACC,EAAMC,KACjCD,EAAKE,UAAYD,EAAW,IAAM,KAiF9BE,EAAwB,CAACxH,EAAOyH,WAC9BC,EAAS,KAAgBD,SAE3BnE,EAAOtD,GA9DsB,EAAC2H,EAAMD,WAClCxD,EAAS,OACX0D,EAAO,YAEXrE,EAAYoE,EAAO3H,IACjB4H,GAAQF,EAEJxF,EAASlC,IACXkE,EAAOnB,KAAK8E,SAASC,eAAeF,IACpCA,EAAO,GACP1D,EAAOnB,KAAKgF,EAAe/H,EAAO0H,KAElCE,GAAQ5H,EAEV4H,GAAQ,SAGNA,GACF1D,EAAOnB,KAAK8E,SAASC,eAAeF,IAG/B1D,GA0CE8D,CAA2BhI,EAAO0H,GAvCT,EAAC5D,EAAS4D,WACtCxD,EAAS,OACX0D,EAAO,YAEX/D,EAAeC,EAAS,CAAC9D,EAAOiB,KAC9B2G,GAAS,GAAEF,EAEPxF,EAASjB,IACXiD,EAAOnB,KAAK8E,SAASC,eAAkBF,EAAF,MACrC1D,EAAOnB,KAAKgF,EAAe9G,EAAKyG,IAChCE,EAAO,KAEPA,GAAQ3G,EAGV2G,GAAQ,KAEJ1F,EAASlC,IACXkE,EAAOnB,KAAK8E,SAASC,eAAeF,IACpC1D,EAAOnB,KAAKgF,EAAe/H,EAAO0H,IAClCE,EAAO,IAEPA,GAAQ5H,EAGV4H,GAAQ,SAGNA,GACF1D,EAAOnB,KAAK8E,SAASC,eAAeF,IAG/B1D,GAUA+D,CAA4BjI,EAAO0H,IAGrC,SAASK,EAAe/H,EAAO0H,EAAQ,GAAIQ,GAAe,SACzDC,EAAO7E,EAAOtD,GAAS0D,EAAY1D,GAAS+D,EAAe/D,OAE7DoI,EADAd,EAAWY,KAAkBC,QAE3BE,EAnFuB,EAACrI,EAAOmI,SACjCtD,EAAUxB,EAAsBrD,eAEpBsI,IAAZzD,IACFA,EAAUsD,EAAO,QAAU,IAGtB,CAACN,SAASC,eAAejD,KA4EP0D,CAAuBvI,EAAOmI,IACjD/F,IAAEA,EAAFC,KAAOA,GDpGerC,CAAAA,UACtBwI,EAAQpF,EAAepD,GAEvBO,EAAO4C,EAAuBnD,UAEhCsD,EAAOtD,GACTwI,EAAMpG,IAAO,GAAE7B,KAAQmD,EAAY1D,MAAUwI,EAAMpG,MAEnDoG,EAAMpG,IAAO,GAAE7B,IAAOiI,EAAMpG,MAGvBoG,GCyFeC,CAAczI,GAC9BqH,EA9FkBC,CAAAA,UAClBD,EAAOQ,SAASa,cAAc,eACpCrB,EAAKxF,UAAY,2BAEjBuF,EAAoBC,EAAMC,GAEnBD,GAwFMsB,CAAiBrB,GACxBsB,EAAUf,SAASa,cAAc,QAEvCE,EAAQ/G,UAAY,kCAEdgH,EAAOhB,SAASa,cAAc,QACpCG,EAAKhH,UAAY,uBACjBgH,EAAKC,YAAYzB,GACjBwB,EAAKC,YAAYjB,SAASC,eAAe1F,UAEnC2G,EAAe,SACflE,EDlG0B3E,CAAAA,SACzBA,EAAO8I,YACZ9I,EAAO+I,YAAY/I,EAAO8I,aCkG1BE,CAAkBN,GAElBA,EAAQE,YAAYD,GAEhBvB,GACGc,IACHA,EAAkBZ,EAAsBxH,EAAO0H,IAGjD7C,EAAUuD,GAEVvD,EAAUwD,EAGZxD,EAAQpB,QAAS0F,GAASP,EAAQE,YAAYK,IAE9CP,EAAQE,YACNjB,SAASC,eAAeR,EAAY,GAAEI,IAAQrF,IAASA,YAI3DwG,EAAKO,iBAAiB,QAAUC,IAC9BA,EAAMC,iBACND,EAAME,kBAENjC,GAAYA,EAEZF,EAAoBC,EAAMC,GAC1ByB,MAGFA,IAEOH,EC3JT,eAAQ1G,EAAFJ,YAAYA,GAAgBkB,QAE5BwG,EAAqBxJ,GAAU6H,SAASC,eAAkB9H,EAAF,KCcjDyJ,EAAO,CAACC,EAAWC,EAAWzD,OAAO0D,0BAY1CC,EAAW,CAAChF,EAASpC,EHzBL,MGyBsBqH,GAAY,WAChD3F,EAAO0D,SAASa,cAAc,OACpCvE,EAAKtC,UAAa,mCAAkCY,ED1B5B,EAACoC,EAASV,EAAM2F,GAAY,KACtDjF,EAAQpB,QAASzD,QACV8J,GAAahI,EAAY9B,eAE5BmE,EAAK2E,YAAYU,EAAkBxJ,UAI/BkE,EAAS4F,EAAY9J,EAAQ0G,EAAQ1G,GAEvCkC,EAASgC,GACXC,EAAK2E,YAAYf,EAAe7D,EAAQ,IAAI,IAE5CC,EAAK2E,YAAYU,EAAkBtF,OCerC6F,CAAalF,EAASV,EAAM2F,GAE5BJ,EAAUZ,YAAY3E,GAjBH,WACZwF,EAAW,GAAKA,EAAWD,EAAUM,mBAAmB,OACvDC,EAAQP,EAAUQ,sBACnBD,SAILA,EAAME,WAWRC,UAGK,CACLC,KAAM,IAAIxF,IAAYgF,EAAShF,EHrCV,QGsCrByF,IAAK,IAAIzF,IAAYgF,EAAShF,EHrCV,OGsCpB0F,KAAM,IAAI1F,IAAYgF,EAAShF,EHrCP,WGsCxB2F,MAAO,IAAI3F,IAAYgF,EAAShF,EHrCV,SGsCtB4F,QAAS,IAAI5F,IAAYgF,EAAShF,EHrCV,WGsCxB9B,KAAM,CAACN,KAASoC,IAAYgF,EAAShF,EAASpC,GAC9CiI,aAAc,CAACjI,KAASoC,IAAYgF,EAAShF,EAASpC,GAAM,gDAI1C,CAACmG,EAASe,EAAWzD,OAAO0D,0BAC1CF,EAAY7B,SAASa,cAAc,cACzCgB,EAAU7H,UAAY,kCACtB+G,EAAQE,YAAYY,GAEbD,EAAKC,EAAWC"}