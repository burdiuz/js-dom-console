{"version":3,"file":"console.min.js","sources":["node_modules/@actualwave/log-data-renderer/source/utils.js","node_modules/@actualwave/get-class/get-class.js","node_modules/@actualwave/log-data-renderer/source/types/Array.js","node_modules/@actualwave/log-data-renderer/source/types/Boolean.js","node_modules/@actualwave/log-data-renderer/source/types/Date.js","node_modules/@actualwave/log-data-renderer/source/types/Error.js","node_modules/@actualwave/log-data-renderer/source/types/Function.js","node_modules/@actualwave/log-data-renderer/source/types/Map.js","node_modules/@actualwave/log-data-renderer/source/types/Number.js","node_modules/@actualwave/log-data-renderer/source/types/Object.js","node_modules/@actualwave/log-data-renderer/source/types/Set.js","node_modules/@actualwave/log-data-renderer/source/types/String.js","node_modules/@actualwave/log-data-renderer/source/types/Symbol.js","node_modules/@actualwave/log-data-renderer/source/types/index.js","node_modules/@actualwave/closure-value/closure-value.js","node_modules/@actualwave/log-data-renderer/source/max-depth.js","node_modules/@actualwave/log-data-renderer/source/data.js","source/utils.js","source/nested.js","source/dom.js","source/index.js"],"sourcesContent":["// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nexport const MAX_FUNC_STR_LEN = 30;\n\nexport const setCustomClassNameTo = (data, className) =>\n  (data.className = className);\n\nexport const getCustomClassNameFrom = (data) => data.className || '';\n\nexport const canPassAsIs = (value) => typeof value === 'string';\n\nconst validKeyRgx = /^[\\w_$][\\w\\d_$]*$/i;\n\nexport const keyNeedsConversion = (key) =>\n  !(canPassAsIs(key) && validKeyRgx.test(key));\n\nexport const isNested = (value) => value && typeof value === 'object';\n\nexport const setNestedWraps = (value, pre, post) => {\n  value.pre = pre;\n  value.post = post;\n};\n\nexport const getNestedWraps = ({ pre, post }) => ({ pre, post });\n\nexport const setNestedShortContent = (value, short) => {\n  value.short = short;\n};\n\nexport const getNestedShortContent = (value) => value.short;\n\nexport const isList = (target) => isNested(target) && target.type === 'list';\n\nexport const createList = () => ({\n  type: 'list',\n  values: [],\n  pre: '[',\n  post: ']',\n});\n\nexport const addToList = ({ values }, index, value) => (values[index] = value);\n\nexport const iterateList = ({ values }, handler) =>\n  values.forEach((value, index) => handler(value, index));\n\nexport const getListSize = ({ values }) => values.length;\n\nexport const isStorage = (target) =>\n  isNested(value) && target.type === 'storage';\n\nexport const createStorage = () => ({\n  type: 'storage',\n  keys: [],\n  values: [],\n  pre: '{',\n  post: '}',\n});\n\nexport const addToStorage = ({ keys, values }, key, value) => {\n  keys.push(key);\n  values.push(value);\n};\n\nexport const iterateStorage = (storage, handler) => {\n  const { keys, values } = storage;\n\n  keys.forEach((key, index) => handler(values[index], key));\n};\n\nexport const getStorageSize = ({ keys }) => keys.length;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n\n  const constructor = target.constructor;\n\n  if(\n    typeof constructor === 'function'\n    && target instanceof constructor\n  ) {\n    return target.constructor;\n  }\n\n  const proto = Object.getPrototypeOf(target);\n\n  if (proto && typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto || Object;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n\n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const valueClass = getClass(value);\n\n  return valueClass ? valueClass.name : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo, createList, addToList } from '../utils.js';\n\nexport default (value, convertValue) => {\n  const result = createList();\n\n  value.forEach((item, index) => {\n    addToList(result, index, convertValue(item));\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","export default (value) => `Date(${value})`;\n","import {\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n} from '../utils.js';\n\nexport default (value, convertValue) => {\n  const { name, message, columnNumber, fileName, lineNumber } = value;\n\n  const result = createStorage();\n\n  addToStorage(result, 'name', convertValue(name));\n  addToStorage(result, 'message', convertValue(message));\n  addToStorage(result, 'columnNumber', convertValue(columnNumber));\n  addToStorage(result, 'fileName', convertValue(fileName));\n  addToStorage(result, 'lineNumber', convertValue(lineNumber));\n\n  setCustomClassNameTo(result, name || 'Error');\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  MAX_FUNC_STR_LEN,\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n  setNestedWraps,\n  setNestedShortContent,\n} from '../utils.js';\n\nexport default (value) => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const type = getClassName(value) || 'Function';\n\n  let { name } = value;\n\n  if (!name) {\n    name = content\n      .replace(/\\s+/g, ' ')\n      .substr(content.substr(0, 9) === 'function ' ? 9 : 0, MAX_FUNC_STR_LEN);\n\n    if (content.length < MAX_FUNC_STR_LEN) {\n      name = `${name}...`;\n    }\n  }\n\n  const result = createStorage();\n  addToStorage(result, 'code', content);\n  setNestedWraps(result, '(', ')');\n  setNestedShortContent(result, name);\n  setCustomClassNameTo(result, type);\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n} from '../utils.js';\n\nexport default (value, convertValue) => {\n  const result = createStorage();\n\n  value.forEach((item, key) => {\n    /*\n    Do not use keyNeedsConversion() here, because Map may hold values of\n    different types as keys and string should be quoted, otherwise it may be\n    unclear -- what you see string true or boolean true as key.\n    */\n    addToStorage(result, convertValue(key), convertValue(item));\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => `${value}`;\n","import { getClassName } from '@actualwave/get-class';\n\nimport {\n  setCustomClassNameTo,\n  createStorage,\n  addToStorage,\n  keyNeedsConversion,\n} from '../utils.js';\n\nexport default (value, convertValue) => {\n  const result = createStorage();\n\n  Object.keys(value).forEach((key) => {\n    try {\n      addToStorage(\n        result,\n        keyNeedsConversion(key) ? convertValue(key) : key,\n        convertValue(value[key]),\n      );\n    } catch (error) {\n      /* Possible SecurityError when accessing properties from restricted origin */\n    }\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","import { getClassName } from '@actualwave/get-class';\n\nimport { setCustomClassNameTo, createList, addToList } from '../utils.js';\n\nexport default (value, convertValue) => {\n  const result = createList();\n  // remove need in indexes for Set\n  let index = 0;\n\n  value.forEach((item) => {\n    addToList(result, index++, convertValue(item));\n  });\n\n  setCustomClassNameTo(result, getClassName(value));\n\n  return result;\n};\n","export default (value) => JSON.stringify(value);\n","export default (value) => String(value);\n","import { getClass } from '@actualwave/get-class';\n\nimport convertArray from './Array.js';\nimport convertBoolean from './Boolean.js';\nimport convertDate from './Date.js';\nimport convertError from './Error.js';\nimport convertFunction from './Function.js';\nimport convertMap from './Map.js';\nimport convertNumber from './Number.js';\nimport convertObject from './Object.js';\nimport convertSet from './Set.js';\nimport convertString from './String.js';\nimport convertSymbol from './Symbol.js';\n\n// Every value in JS has .constructor property\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\nexport const addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\n\nexport const hasTypeHandler = (constructor) => types.has(constructor);\n\nexport const getTypeHandler = (constructor) => types.get(constructor);\n\nexport const removeTypeHandler = (constructor) => types.delete(constructor);\n\nexport const defaultTypeHandlerSelector = (value) => {\n  const type = getClass(value);\n\n  return type && getTypeHandler(type);\n};\n\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\nexport const selectTypeHandler = (value) => typeHandlerSelector(value);\n\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\nexport const setTypeHandlerSelector = (newSelector) => {\n  typeHandlerSelector = newSelector;\n};\n\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst singleValueFactory = (defaultValue = null, valueFormatter = (value) => value) => {\n  let value = defaultValue;\n\n  return {\n    getDefault: () => defaultValue,\n    get: () => value,\n    set: (newValue = defaultValue) => {\n      value = valueFormatter(newValue);\n    },\n  };\n};\n\nconst valuesMapFactory = (defaults = new Map(), valueFormatter = (key, value) => value) => {\n  const defaultValues = new Map(defaults);\n  const getDefault = () => new Map(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    copy: () => new Map(values),\n    delete: (key) => values.delete(key),\n    has: (key) => values.has(key),\n    set: (key, value) => values.set(key, valueFormatter(key, value)),\n    get: (key) => values.get(key),\n  };\n};\n\nconst valuesSetFactory = (defaults = new Set(), valueFormatter = (value) => value) => {\n  const defaultValues = new Set(defaults);\n  const getDefault = () => new Set(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    get: () => new Set(values),\n    delete: (value) => values.delete(value),\n    has: (value) => values.has(value),\n    add: (value) => values.add(valueFormatter(value)),\n  };\n};\n\nexports.singleValueFactory = singleValueFactory;\nexports.valuesMapFactory = valuesMapFactory;\nexports.valuesSetFactory = valuesSetFactory;","import { singleValueFactory } from '@actualwave/closure-value';\n\nexport const {\n  get: getMaxNesingDepth,\n  set: setMaxNesingDepth,\n} = singleValueFactory(2);\n","import convertArray from './types/Array.js';\nimport convertBoolean from './types/Boolean.js';\nimport convertDate from './types/Date.js';\nimport convertError from './types/Error.js';\nimport convertFunction from './types/Function.js';\nimport convertMap from './types/Map.js';\nimport convertNumber from './types/Number.js';\nimport convertObject from './types/Object.js';\nimport convertSet from './types/Set.js';\nimport convertString from './types/String.js';\nimport convertSymbol from './types/Symbol.js';\n\nimport { getMaxNesingDepth } from './max-depth.js';\n\nimport { selectTypeHandler } from './types/index.js';\n\nexport const isString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n    default:\n      return value === null || value instanceof Date;\n  }\n};\n\nexport const toString = (value) => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n    case 'string':\n      return convertString(value);\n    case 'boolean':\n      return convertBoolean(value);\n    case 'number':\n      return convertNumber(value);\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      try {\n        return `${value}`;\n      } catch (error) {\n        return '[object Non-Serializable]';\n      }\n  }\n};\n\nconst fallbackConversion = (value, convertValue, refs) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value, convertValue, refs);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue, refs);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue, refs);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue, refs);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue, refs);\n  }\n\n  return convertObject(value, convertValue, refs);\n};\n\nexport const convert = (value, level = 1, refs = new Map()) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const maxLevel = getMaxNesingDepth();\n\n  if (level > maxLevel) {\n    return toString(value);\n  }\n\n  const complex = !isString(value);\n\n  if (complex && refs.has(value)) {\n    return refs.get(value);\n  }\n\n  const handler = selectTypeHandler(value);\n  const nextConvert = (propValue) => convert(propValue, level + 1, refs);\n  const result = handler\n    ? handler(value, nextConvert, refs)\n    : fallbackConversion(value, nextConvert, refs);\n\n  if (complex) {\n    refs.set(value, result);\n  }\n\n  return result;\n};\n","import { utils } from '@actualwave/log-data-renderer';\n\nconst { isList, getListSize, getNestedWraps, getCustomClassNameFrom } = utils;\n\nexport const SPACE_LEVEL = '  ';\n\nexport const INFO_TYPE = 'info';\nexport const LOG_TYPE = 'log';\nexport const WARNING_TYPE = 'warning';\nexport const ERROR_TYPE = 'error';\nexport const SUCCESS_TYPE = 'success';\n\nexport const getStringWrap = (value) => {\n  const wraps = getNestedWraps(value);\n\n  const name = getCustomClassNameFrom(value);\n\n  if (isList(value)) {\n    wraps.pre = `${name}(${getListSize(value)})${wraps.pre}`;\n  } else {\n    wraps.pre = `${name}${wraps.pre}`;\n  }\n\n  return wraps;\n};\n\nexport const removeAllChildren = (target) => {\n  while (target.firstChild) {\n    target.removeChild(target.firstChild);\n  }\n};\n","/* eslint-disable no-use-before-define */\nimport { utils } from '@actualwave/log-data-renderer';\nimport { SPACE_LEVEL, getStringWrap, removeAllChildren } from './utils.js';\n\nconst {\n  iterateStorage,\n  isNested,\n  isList,\n  iterateList,\n  getNestedShortContent,\n  getNestedWraps,\n  getListSize,\n  getStorageSize,\n} = utils;\n\nconst setExpandIconSymbol = (icon, expanded) => {\n  icon.innerHTML = expanded ? '-' : '+';\n};\n\nconst createExpandIcon = (expanded) => {\n  const icon = document.createElement('span');\n  icon.className = 'ui-console-button-expand';\n\n  setExpandIconSymbol(icon, expanded);\n\n  return icon;\n};\n\nconst createCollapsedContent = (value, size) => {\n  let content = getNestedShortContent(value);\n\n  if (content === undefined) {\n    content = size ? ' ... ' : '';\n  }\n\n  return [document.createTextNode(content)];\n};\n\nconst createUINestedArrayContent = (list, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateList(list, (value) => {\n    text += space;\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedObjectContent = (storage, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateStorage(storage, (value, key) => {\n    text += `${space}`;\n\n    if (isNested(key)) {\n      result.push(document.createTextNode(`${text}[`));\n      result.push(createUINested(key, space));\n      text = ']';\n    } else {\n      text += key;\n    }\n\n    text += ': ';\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      result.push(createUINested(value, space));\n      text = '';\n    } else {\n      text += value;\n    }\n\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedContent = (value, initSpace) => {\n  const space = `${SPACE_LEVEL}${initSpace}`;\n\n  if (isList(value)) {\n    return createUINestedArrayContent(value, space);\n  }\n\n  return createUINestedObjectContent(value, space);\n};\n\nexport function createUINested(value, space = '', initExpanded = false) {\n  const size = isList(value) ? getListSize(value) : getStorageSize(value);\n  let expanded = initExpanded && !!size;\n  let contentExpanded;\n  const contentCollapsed = createCollapsedContent(value, size);\n  const { pre, post } = getStringWrap(value);\n  const icon = createExpandIcon(expanded);\n  const wrapper = document.createElement('span');\n\n  wrapper.className = 'ui-console-nested-wrapper';\n\n  const link = document.createElement('span');\n  link.className = 'ui-console-clickable';\n  link.appendChild(icon);\n  link.appendChild(document.createTextNode(pre));\n\n  const drawContents = () => {\n    let content;\n\n    removeAllChildren(wrapper);\n\n    wrapper.appendChild(link);\n\n    if (expanded) {\n      if (!contentExpanded) {\n        contentExpanded = createUINestedContent(value, space);\n      }\n\n      content = contentExpanded;\n    } else {\n      content = contentCollapsed;\n    }\n\n    content.forEach((node) => wrapper.appendChild(node));\n\n    wrapper.appendChild(\n      document.createTextNode(expanded ? `${space}${post}` : post),\n    );\n  };\n\n  link.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    expanded = !expanded;\n\n    setExpandIconSymbol(icon, expanded);\n    drawContents();\n  });\n\n  drawContents();\n\n  return wrapper;\n}\n","\nimport convert, { utils } from '@actualwave/log-data-renderer';\nimport { createUINested } from './nested.js';\n\nconst { isNested, canPassAsIs } = utils;\n\nconst createSimpleValue = (value) => document.createTextNode(`${value} `);\n\nexport const buildContent = (content, item, converted = false) => {\n  content.forEach((value) => {\n    if (!converted && canPassAsIs(value)) {\n      // shortcut for log strings to not wrap them with quotes\n      item.appendChild(createSimpleValue(value));\n      return;\n    }\n\n    const result = converted ? value : convert(value);\n\n    if (isNested(result)) {\n      item.appendChild(createUINested(result, '', true));\n    } else {\n      item.appendChild(createSimpleValue(result));\n    }\n  });\n\n  return item;\n};\n","import {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n} from '@actualwave/log-data-renderer';\n\nimport {\n  INFO_TYPE,\n  LOG_TYPE,\n  WARNING_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE,\n} from './utils.js';\n\nimport { buildContent } from './dom.js';\n\nexport const init = (container, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const shiftOverMax = () => {\n    while (maxItems > 0 && maxItems < container.childElementCount) {\n      const child = container.firstElementChild;\n\n      if (!child) {\n        return;\n      }\n\n      child.remove();\n    }\n  };\n\n  const pushItem = (content, type = LOG_TYPE, converted = false) => {\n    const item = document.createElement('div');\n    item.className = `ui-console-item ui-console-item-${type}`;\n\n    buildContent(content, item, converted);\n\n    container.appendChild(item);\n    shiftOverMax();\n  };\n\n  return {\n    info: (...content) => pushItem(content, INFO_TYPE),\n    log: (...content) => pushItem(content, LOG_TYPE),\n    warn: (...content) => pushItem(content, WARNING_TYPE),\n    error: (...content) => pushItem(content, ERROR_TYPE),\n    success: (...content) => pushItem(content, SUCCESS_TYPE),\n    push: (type, ...content) => pushItem(content, type),\n    pushRendered: (type, ...content) => pushItem(content, type, true),\n    clear: () => {\n      container.innerHTML = '';\n    },\n  };\n};\n\nexport const create = (wrapper, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const container = document.createElement('div');\n  container.className = 'ui-console ui-console-container';\n  wrapper.appendChild(container);\n\n  return init(container, maxItems);\n};\n\n/*\nCustomizable type representation\n */\nexport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n};\n\nexport default {\n  create,\n  init,\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n};\n"],"names":["setCustomClassNameTo","data","className","canPassAsIs","value","validKeyRgx","keyNeedsConversion","key","test","isNested","setNestedWraps","pre","post","setNestedShortContent","short","createList","type","values","addToList","index","createStorage","keys","addToStorage","push","target","handler","forEach","length","storage","Object","defineProperty","exports","getClass","constructor","proto","getPrototypeOf","getClassName","valueClass","name","getParentClass","def","default","convertArray","convertValue","result","item","convertBoolean","convertDate","convertError","message","columnNumber","fileName","lineNumber","convertFunction","content","String","replace","substr","convertMap","convertNumber","convertObject","error","convertSet","convertString","JSON","stringify","convertSymbol","types","Map","addTypeHandler","delete","set","hasTypeHandler","has","getTypeHandler","get","removeTypeHandler","typeHandlerSelector","setTypeHandlerSelector","newSelector","Array","Boolean","Date","Error","Function","Number","Set","Symbol","singleValueFactory","defaultValue","valueFormatter","getDefault","newValue","valuesMapFactory","defaults","defaultValues","copy","valuesSetFactory","add","getMaxNesingDepth","setMaxNesingDepth","isString","toString","convert","level","refs","maxLevel","complex","selectTypeHandler","nextConvert","propValue","fallbackConversion","isList","getListSize","getNestedWraps","getCustomClassNameFrom","utils","iterateStorage","iterateList","getNestedShortContent","getStorageSize","setExpandIconSymbol","icon","expanded","innerHTML","createUINestedContent","initSpace","space","createUINestedArrayContent","list","text","document","createTextNode","createUINested","createUINestedObjectContent","initExpanded","size","contentExpanded","contentCollapsed","createCollapsedContent","undefined","wraps","getStringWrap","createElement","createExpandIcon","wrapper","link","appendChild","drawContents","firstChild","removeChild","removeAllChildren","node","addEventListener","event","preventDefault","stopPropagation","createSimpleValue","init","container","maxItems","MAX_SAFE_INTEGER","pushItem","converted","buildContent","shiftOverMax","childElementCount","child","firstElementChild","remove","info","log","warn","success","pushRendered","clear","create"],"mappings":"kPAEO,MAEMA,EAAuB,CAACC,EAAMC,IACxCD,EAAKC,UAAYA,EAIPC,EAAeC,GAA2B,iBAAVA,EAEvCC,EAAc,qBAEPC,EAAsBC,KAC/BJ,EAAYI,IAAQF,EAAYG,KAAKD,IAE5BE,EAAYL,GAAUA,GAA0B,iBAAVA,EAEtCM,EAAiB,CAACN,EAAOO,EAAKC,KACzCR,EAAMO,IAAMA,EACZP,EAAMQ,KAAOA,CAAI,EAKNC,EAAwB,CAACT,EAAOU,KAC3CV,EAAMU,MAAQA,CAAK,EAORC,EAAa,KAAO,CAC/BC,KAAM,OACNC,OAAQ,GACRN,IAAK,IACLC,KAAM,MAGKM,EAAY,EAAGD,UAAUE,EAAOf,IAAWa,EAAOE,GAASf,EAU3DgB,EAAgB,KAAO,CAClCJ,KAAM,UACNK,KAAM,GACNJ,OAAQ,GACRN,IAAK,IACLC,KAAM,MAGKU,EAAe,EAAGD,OAAMJ,UAAUV,EAAKH,KAClDiB,EAAKE,KAAKhB,GACVU,EAAOM,KAAKnB,EAAM,uDA1DY,iDAKOH,GAASA,EAAKC,WAAa,iFAgBpC,EAAGS,MAAKC,WAAM,CAAQD,MAAKC,uDAMnBR,GAAUA,EAAMU,aAE/BU,GAAWf,EAASe,IAA2B,SAAhBA,EAAOR,0CAWlC,EAAGC,UAAUQ,IACtCR,EAAOS,SAAQ,CAACtB,EAAOe,IAAUM,EAAQrB,EAAOe,iBAEvB,EAAGF,YAAaA,EAAOU,iBAExBH,GACxBf,EAASL,QAA0B,YAAhBoB,EAAOR,mDAeE,CAACY,EAASH,KACtC,MAAMJ,KAAEA,EAAIJ,OAAEA,GAAWW,EAEzBP,EAAKK,SAAQ,CAACnB,EAAKY,IAAUM,EAAQR,EAAOE,GAAQZ,IAAK,iBAG7B,EAAGc,UAAWA,EAAKM,4PCnEjDE,OAAOC,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IAEtD,MAAM4B,EAAYR,IAChB,GAAGA,QACD,OAGF,MAAMS,EAAcT,EAAOS,YAE3B,GACyB,mBAAhBA,GACJT,aAAkBS,EAErB,OAAOT,EAAOS,YAGhB,MAAMC,EAAQL,OAAOM,eAAeX,GAEpC,OAAIU,GAA0B,iBAAVA,EACXA,EAAMD,YAGRC,GAASL,MAAM,EAiBxBE,EAAoBK,aAREhC,IACpB,IAAKA,EAAO,MAAO,GAEnB,MAAMiC,EAAaL,EAAS5B,GAE5B,OAAOiC,EAAaA,EAAWC,KAAO,EAAE,EAI1CP,EAAsBQ,eAfEf,IACtB,MAAMgB,EAAMR,EAASR,GAErB,OAAOgB,GAAOX,OAAOM,eAAeK,EAAI,EAa1CT,EAAgBC,SAAGA,EACnBD,EAAAU,QAAkBT,KCxClBU,EAAe,CAACtC,EAAOuC,KACrB,MAAMC,EF4ByB,CAC/B5B,KAAM,OACNC,OAAQ,GACRN,IAAK,IACLC,KAAM,KExBN,OANAR,EAAMsB,SAAQ,CAACmB,EAAM1B,KACnBD,EAAU0B,EAAQzB,EAAOwB,EAAaE,GAAM,IAG9C7C,EAAqB4C,EAAQR,eAAahC,IAEnCwC,CAAM,ECbfE,EAAgB1C,GAAU,GAAGA,ICAd2C,EAAC3C,GAAU,QAAQA,KCMlC4C,EAAe,CAAC5C,EAAOuC,KACrB,MAAML,KAAEA,EAAIW,QAAEA,EAAOC,aAAEA,EAAYC,SAAEA,EAAQC,WAAEA,GAAehD,EAExDwC,ELyC4B,CAClC5B,KAAM,UACNK,KAAM,GACNJ,OAAQ,GACRN,IAAK,IACLC,KAAM,KKpCN,OARAU,EAAasB,EAAQ,OAAQD,EAAaL,IAC1ChB,EAAasB,EAAQ,UAAWD,EAAaM,IAC7C3B,EAAasB,EAAQ,eAAgBD,EAAaO,IAClD5B,EAAasB,EAAQ,WAAYD,EAAaQ,IAC9C7B,EAAasB,EAAQ,aAAcD,EAAaS,IAEhDpD,EAAqB4C,EAAQN,GAAQ,SAE9BM,CAAM,ECRAS,EAACjD,IACd,MAAMkD,EAAUC,OAAOnD,GAEvB,GAAIkD,EAAQ3B,QNZkB,GMa5B,OAAO2B,EAGT,MAAMtC,EAAOoB,EAAAA,aAAahC,IAAU,WAEpC,IAAIkC,KAAEA,GAASlC,EAEVkC,IACHA,EAAOgB,EACJE,QAAQ,OAAQ,KAChBC,OAAgC,cAAzBH,EAAQG,OAAO,EAAG,GAAqB,EAAI,ENvBzB,IMyBxBH,EAAQ3B,ONzBgB,KM0B1BW,EAAO,GAAGA,SAId,MAAMM,ENkB4B,CAClC5B,KAAM,UACNK,KAAM,GACNJ,OAAQ,GACRN,IAAK,IACLC,KAAM,KMjBN,OALAU,EAAasB,EAAQ,OAAQU,GAC7B5C,EAAekC,EAAQ,IAAK,KAC5B/B,EAAsB+B,EAAQN,GAC9BtC,EAAqB4C,EAAQ5B,GAEtB4B,CAAM,EC9Bfc,EAAe,CAACtD,EAAOuC,KACrB,MAAMC,EPyC4B,CAClC5B,KAAM,UACNK,KAAM,GACNJ,OAAQ,GACRN,IAAK,IACLC,KAAM,KOjCN,OAXAR,EAAMsB,SAAQ,CAACmB,EAAMtC,KAMnBe,EAAasB,EAAQD,EAAapC,GAAMoC,EAAaE,GAAM,IAG7D7C,EAAqB4C,EAAQR,eAAahC,IAEnCwC,CAAM,ECtBfe,EAAgBvD,GAAU,GAAGA,ICS7BwD,EAAe,CAACxD,EAAOuC,KACrB,MAAMC,ETwC4B,CAClC5B,KAAM,UACNK,KAAM,GACNJ,OAAQ,GACRN,IAAK,IACLC,KAAM,KS7BN,OAdAiB,OAAOR,KAAKjB,GAAOsB,SAASnB,IAC1B,IACEe,EACEsB,EACAtC,EAAmBC,GAAOoC,EAAapC,GAAOA,EAC9CoC,EAAavC,EAAMG,IAEtB,CAAC,MAAOsD,GAER,KAGH7D,EAAqB4C,EAAQR,eAAahC,IAEnCwC,CAAM,ECtBfkB,EAAe,CAAC1D,EAAOuC,KACrB,MAAMC,EV4ByB,CAC/B5B,KAAM,OACNC,OAAQ,GACRN,IAAK,IACLC,KAAM,KU9BN,IAAIO,EAAQ,EAQZ,OANAf,EAAMsB,SAASmB,IACb3B,EAAU0B,EAAQzB,IAASwB,EAAaE,GAAM,IAGhD7C,EAAqB4C,EAAQR,eAAahC,IAEnCwC,CAAM,ECfAmB,EAAC3D,GAAU4D,KAAKC,UAAU7D,GCAzC8D,EAAgB9D,GAAUmD,OAAOnD,GCkBjC,MAAM+D,EAAQ,IAAIC,IAOLC,EAAiB,CAACpC,EAAaR,KACtCQ,GAAeR,IACjB0C,EAAMG,OAAOrC,GACbkC,EAAMI,IAAItC,EAAaR,GACxB,EAGU+C,EAAkBvC,GAAgBkC,EAAMM,IAAIxC,GAE5CyC,EAAkBzC,GAAgBkC,EAAMQ,IAAI1C,GAE5C2C,EAAqB3C,GAAgBkC,EAAMG,OAAOrC,GAQ/D,IAAI4C,EANuCzE,IACzC,MAAMY,EAAOgB,WAAS5B,GAEtB,OAAOY,GAAQ0D,EAAe1D,EAAK,EAS9B,MAOM8D,EAA0BC,IACrCF,EAAsBE,CAAW,EAGnCV,EAAeW,MAAOtC,GACtB2B,EAAeY,QAASnC,GACxBuB,EAAea,KAAMnC,GACrBsB,EAAec,MAAOnC,GACtBqB,EAAee,SAAU/B,GACzBgB,EAAeD,IAAKV,GACpBW,EAAegB,OAAQ1B,GACvBU,EAAexC,OAAQ+B,GACvBS,EAAeiB,IAAKxB,GACpBO,EAAed,OAAQQ,GACvBM,EAAekB,OAAQrB,0BCrEvBrC,OAAOC,eAAeC,EAAS,aAAc,CAAE3B,OAAO,IA+CtD2B,EAA0ByD,mBA7CC,CAACC,EAAe,KAAMC,EAAiB,CAACtF,GAAUA,MAC3E,IAAIA,EAAQqF,EAEZ,MAAO,CACLE,WAAY,IAAMF,EAClBd,IAAK,IAAMvE,EACXmE,IAAK,CAACqB,EAAWH,KACfrF,EAAQsF,EAAeE,EAAS,EAEnC,EAqCH7D,EAAwB8D,iBAlCC,CAACC,EAAW,IAAI1B,IAAOsB,EAAiB,EAACnF,EAAKH,IAAUA,MAC/E,MAAM2F,EAAgB,IAAI3B,IAAI0B,GACxBH,EAAa,IAAM,IAAIvB,IAAI2B,GAE3B9E,EAAS0E,IAEf,MAAO,CACL1E,SACA0E,aACAK,KAAM,IAAM,IAAI5B,IAAInD,GACpBqD,OAAS/D,GAAQU,EAAOqD,OAAO/D,GAC/BkE,IAAMlE,GAAQU,EAAOwD,IAAIlE,GACzBgE,IAAK,CAAChE,EAAKH,IAAUa,EAAOsD,IAAIhE,EAAKmF,EAAenF,EAAKH,IACzDuE,IAAMpE,GAAQU,EAAO0D,IAAIpE,GAC1B,EAqBHwB,EAAAkE,iBAlByB,CAACH,EAAW,IAAIR,IAAOI,EAAiB,CAACtF,GAAUA,MAC1E,MAAM2F,EAAgB,IAAIT,IAAIQ,GACxBH,EAAa,IAAM,IAAIL,IAAIS,GAE3B9E,EAAS0E,IAEf,MAAO,CACL1E,SACA0E,aACAhB,IAAK,IAAM,IAAIW,IAAIrE,GACnBqD,OAASlE,GAAUa,EAAOqD,OAAOlE,GACjCqE,IAAMrE,GAAUa,EAAOwD,IAAIrE,GAC3B8F,IAAM9F,GAAUa,EAAOiF,IAAIR,EAAetF,IAC3C,KC5CU,MACXuE,IAAKwB,EACL5B,IAAK6B,GACHZ,EAAkBA,mBAAC,GCWVa,EAAYjG,IACvB,cAAeA,GACb,IAAK,SACL,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAO,EACT,QACE,OAAiB,OAAVA,GAAkBA,aAAiB8E,KAC7C,EAGUoB,EAAYlG,IACvB,cAAeA,GACb,IAAK,SACH,OAAO8D,EAAc9D,GACvB,IAAK,SACH,OAAO2D,EAAc3D,GACvB,IAAK,UACH,OAAO0C,EAAe1C,GACxB,IAAK,SACH,OAAOuD,EAAcvD,GACvB,QACE,GAAIA,aAAiB8E,KACnB,OAAOnC,EAAY3C,GAGrB,IACE,MAAO,GAAGA,GACX,CAAC,MAAOyD,GACP,MAAO,2BACR,EACJ,EA+BU0C,EAAU,CAACnG,EAAOoG,EAAQ,EAAGC,EAAO,IAAIrC,OACnD,GAAIhE,QACF,MAAO,GAAGA,IAGZ,MAAMsG,EAAWP,IAEjB,GAAIK,EAAQE,EACV,OAAOJ,EAASlG,GAGlB,MAAMuG,GAAWN,EAASjG,GAE1B,GAAIuG,GAAWF,EAAKhC,IAAIrE,GACtB,OAAOqG,EAAK9B,IAAIvE,GAGlB,MAAMqB,EH/CyB,CAACrB,GAAUyE,EAAoBzE,GG+C9CwG,CAAkBxG,GAC5ByG,EAAeC,GAAcP,EAAQO,EAAWN,EAAQ,EAAGC,GAC3D7D,EAASnB,EACXA,EAAQrB,EAAOyG,EAAaJ,GAhDP,EAACrG,EAAOuC,EAAc8D,IAC3CJ,EAASjG,GACJkG,EAASlG,GAGdA,aAAiBgF,SACZ/B,EAAgBjD,GAGrBA,aAAiB+E,MACZnC,EAAa5C,EAAOuC,GAGzBvC,aAAiBgE,IACZV,EAAWtD,EAAOuC,GAGvBvC,aAAiBkF,IACZxB,EAAW1D,EAAOuC,GAGvBvC,aAAiB4E,MACZtC,EAAatC,EAAOuC,GAGtBiB,EAAcxD,EAAOuC,GAwBxBoE,CAAmB3G,EAAOyG,GAM9B,OAJIF,GACFF,EAAKlC,IAAInE,EAAOwC,GAGXA,CAAM,UCzGPoE,cAAQC,iBAAaC,EAAcC,uBAAEA,GAA2BC,GCElEC,eACJA,WACA5G,EAAQuG,OACRA,EAAMM,YACNA,EAAWC,sBACXA,EAAqBL,eACrBA,EAAcD,YACdA,EAAWO,eACXA,GACEJ,EAEEK,EAAsBA,CAACC,EAAMC,KACjCD,EAAKE,UAAYD,EAAW,IAAM,GAAG,EAiFjCE,EAAwBA,CAACzH,EAAO0H,KACpC,MAAMC,EAAS,KAAgBD,IAE/B,OAAId,EAAO5G,GA9DsB4H,EAACC,EAAMF,KACxC,MAAMnF,EAAS,GACf,IAAIsF,EAAO,KAmBX,OAjBAZ,EAAYW,GAAO7H,IACjB8H,GAAQH,EAEJtH,EAASL,IACXwC,EAAOrB,KAAK4G,SAASC,eAAeF,IACpCA,EAAO,GACPtF,EAAOrB,KAAK8G,EAAejI,EAAO2H,KAElCG,GAAQ9H,EAEV8H,GAAQ,MAAM,IAGZA,GACFtF,EAAOrB,KAAK4G,SAASC,eAAeF,IAG/BtF,CAAM,EA0CJoF,CAA2B5H,EAAO2H,GAvCTO,EAAC1G,EAASmG,KAC5C,MAAMnF,EAAS,GACf,IAAIsF,EAAO,KA8BX,OA5BAb,EAAezF,GAAS,CAACxB,EAAOG,KAC9B2H,GAAS,GAAEH,IAEPtH,EAASF,IACXqC,EAAOrB,KAAK4G,SAASC,eAAgB,GAAEF,OACvCtF,EAAOrB,KAAK8G,EAAe9H,EAAKwH,IAChCG,EAAO,KAEPA,GAAQ3H,EAGV2H,GAAQ,KAEJzH,EAASL,IACXwC,EAAOrB,KAAK4G,SAASC,eAAeF,IACpCtF,EAAOrB,KAAK8G,EAAejI,EAAO2H,IAClCG,EAAO,IAEPA,GAAQ9H,EAGV8H,GAAQ,MAAM,IAGZA,GACFtF,EAAOrB,KAAK4G,SAASC,eAAeF,IAG/BtF,CAAM,EAUN0F,CAA4BlI,EAAO2H,EAAM,EAG3C,SAASM,EAAejI,EAAO2H,EAAQ,GAAIQ,GAAe,GAC/D,MAAMC,EAAOxB,EAAO5G,GAAS6G,EAAY7G,GAASoH,EAAepH,GACjE,IACIqI,EADAd,EAAWY,KAAkBC,EAEjC,MAAME,EAnFuBC,EAACvI,EAAOoI,KACrC,IAAIlF,EAAUiE,EAAsBnH,GAMpC,YAJgBwI,IAAZtF,IACFA,EAAUkF,EAAO,QAAU,IAGtB,CAACL,SAASC,eAAe9E,GAAS,EA4EhBqF,CAAuBvI,EAAOoI,IACjD7H,IAAEA,EAAGC,KAAEA,GDpGeR,KAC5B,MAAMyI,EAAQ3B,EAAe9G,GAEvBkC,EAAO6E,EAAuB/G,GAQpC,OANI4G,EAAO5G,GACTyI,EAAMlI,IAAO,GAAE2B,KAAQ2E,EAAY7G,MAAUyI,EAAMlI,MAEnDkI,EAAMlI,IAAO,GAAE2B,IAAOuG,EAAMlI,MAGvBkI,CAAK,ECyFUC,CAAc1I,GAC9BsH,EA9FkBC,KACxB,MAAMD,EAAOS,SAASY,cAAc,QAKpC,OAJArB,EAAKxH,UAAY,2BAEjBuH,EAAoBC,EAAMC,GAEnBD,CAAI,EAwFEsB,CAAiBrB,GACxBsB,EAAUd,SAASY,cAAc,QAEvCE,EAAQ/I,UAAY,4BAEpB,MAAMgJ,EAAOf,SAASY,cAAc,QACpCG,EAAKhJ,UAAY,uBACjBgJ,EAAKC,YAAYzB,GACjBwB,EAAKC,YAAYhB,SAASC,eAAezH,IAEzC,MAAMyI,EAAeA,KACnB,IAAI9F,EDlG0B9B,KAChC,KAAOA,EAAO6H,YACZ7H,EAAO8H,YAAY9H,EAAO6H,WAC5B,ECiGEE,CAAkBN,GAElBA,EAAQE,YAAYD,GAEhBvB,GACGc,IACHA,EAAkBZ,EAAsBzH,EAAO2H,IAGjDzE,EAAUmF,GAEVnF,EAAUoF,EAGZpF,EAAQ5B,SAAS8H,GAASP,EAAQE,YAAYK,KAE9CP,EAAQE,YACNhB,SAASC,eAAeT,EAAY,GAAEI,IAAQnH,IAASA,GACxD,EAeH,OAZAsI,EAAKO,iBAAiB,SAAUC,IAC9BA,EAAMC,iBACND,EAAME,kBAENjC,GAAYA,EAEZF,EAAoBC,EAAMC,GAC1ByB,GAAc,IAGhBA,IAEOH,CACT,CC5JA,MAAMxI,SAAEA,GAAQN,YAAEA,IAAgBiH,EAE5ByC,GAAqBzJ,GAAU+H,SAASC,eAAgB,GAAEhI,MCcnD0J,GAAOA,CAACC,EAAWC,EAAW3E,OAAO4E,oBAChD,MAYMC,EAAWA,CAAC5G,EAAStC,EH1BL,MG0BsBmJ,GAAY,KACtD,MAAMtH,EAAOsF,SAASY,cAAc,OACpClG,EAAK3C,UAAa,mCAAkCc,ID3B5BoJ,EAAC9G,EAAST,EAAMsH,GAAY,KACtD7G,EAAQ5B,SAAStB,IACf,IAAK+J,GAAahK,GAAYC,GAG5B,YADAyC,EAAKsG,YAAYU,GAAkBzJ,IAIrC,MAAMwC,EAASuH,EAAY/J,EAAQmG,EAAQnG,GAEvCK,GAASmC,GACXC,EAAKsG,YAAYd,EAAezF,EAAQ,IAAI,IAE5CC,EAAKsG,YAAYU,GAAkBjH,GACrC,GAGS,ECYTwH,CAAa9G,EAAST,EAAMsH,GAE5BJ,EAAUZ,YAAYtG,GAlBHwH,MACnB,KAAOL,EAAW,GAAKA,EAAWD,EAAUO,mBAAmB,CAC7D,MAAMC,EAAQR,EAAUS,kBAExB,IAAKD,EACH,OAGFA,EAAME,QACR,GAUAJ,EAAc,EAGhB,MAAO,CACLK,KAAMA,IAAIpH,IAAY4G,EAAS5G,EHtCV,QGuCrBqH,IAAKA,IAAIrH,IAAY4G,EAAS5G,EHtCV,OGuCpBsH,KAAMA,IAAItH,IAAY4G,EAAS5G,EHtCP,WGuCxBO,MAAOA,IAAIP,IAAY4G,EAAS5G,EHtCV,SGuCtBuH,QAASA,IAAIvH,IAAY4G,EAAS5G,EHtCV,WGuCxB/B,KAAMA,CAACP,KAASsC,IAAY4G,EAAS5G,EAAStC,GAC9C8J,aAAcA,CAAC9J,KAASsC,IAAY4G,EAAS5G,EAAStC,GAAM,GAC5D+J,MAAOA,KACLhB,EAAUnC,UAAY,EAAE,EAE3B,EAGUoD,GAASA,CAAC/B,EAASe,EAAW3E,OAAO4E,oBAChD,MAAMF,EAAY5B,SAASY,cAAc,OAIzC,OAHAgB,EAAU7J,UAAY,kCACtB+I,EAAQE,YAAYY,GAEbD,GAAKC,EAAWC,EAAS,EAgBnB,IAAA7I,GAAA,CACb6J,UACAlB,QACAzF,iBACAK,iBACAF,iBACAI,oBACAE,yBACAqB,oBACAC"}