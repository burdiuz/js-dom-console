{"version":3,"file":"console.min.js","sources":["node_modules/@actualwave/get-class/get-class.js","node_modules/@actualwave/closure-value/closure-value.js","node_modules/@actualwave/log-data-renderer/index.js","source/utils.js","source/nested.js","source/dom.js","source/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst getClass = (target) => {\n  if(target === null || target === undefined) {\n    return undefined;\n  }\n\n  const constructor = target.constructor;\n\n  if(\n    typeof constructor === 'function'\n    && target instanceof constructor\n  ) {\n    return target.constructor;\n  }\n\n  const proto = Object.getPrototypeOf(target);\n\n  if (proto && typeof proto === 'object') {\n    return proto.constructor;\n  }\n\n  return proto || Object;\n};\n\nconst getParentClass = (target) => {\n  const def = getClass(target);\n\n  return def && Object.getPrototypeOf(def);\n};\n\nconst getClassName = (value) => {\n  if (!value) return '';\n\n  const valueClass = getClass(value);\n\n  return valueClass ? valueClass.name : '';\n};\n\nexports.getClassName = getClassName;\nexports.getParentClass = getParentClass;\nexports.getClass = getClass;\nexports.default = getClass;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst singleValueFactory = (defaultValue = null, valueFormatter = (value) => value) => {\n  let value = defaultValue;\n\n  return {\n    getDefault: () => defaultValue,\n    get: () => value,\n    set: (newValue = defaultValue) => {\n      value = valueFormatter(newValue);\n    },\n  };\n};\n\nconst valuesMapFactory = (defaults = new Map(), valueFormatter = (key, value) => value) => {\n  const defaultValues = new Map(defaults);\n  const getDefault = () => new Map(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    copy: () => new Map(values),\n    delete: (key) => values.delete(key),\n    has: (key) => values.has(key),\n    set: (key, value) => values.set(key, valueFormatter(key, value)),\n    get: (key) => values.get(key),\n  };\n};\n\nconst valuesSetFactory = (defaults = new Set(), valueFormatter = (value) => value) => {\n  const defaultValues = new Set(defaults);\n  const getDefault = () => new Set(defaultValues);\n\n  const values = getDefault();\n\n  return {\n    values,\n    getDefault,\n    get: () => new Set(values),\n    delete: (value) => values.delete(value),\n    has: (value) => values.has(value),\n    add: (value) => values.add(valueFormatter(value)),\n  };\n};\n\nexports.singleValueFactory = singleValueFactory;\nexports.valuesMapFactory = valuesMapFactory;\nexports.valuesSetFactory = valuesSetFactory;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar getClass = require('@actualwave/get-class');\nvar closureValue = require('@actualwave/closure-value');\n\n// Assigned to an object, when rendering, if exists, will wrap content, like\n// Map{...} or Set[...]\nconst MAX_FUNC_STR_LEN = 30;\nconst setCustomClassNameTo = (data, className) => data.className = className;\nconst getCustomClassNameFrom = data => data.className || '';\nconst canPassAsIs = value => typeof value === 'string';\nconst validKeyRgx = /^[\\w_$][\\w\\d_$]*$/i;\nconst keyNeedsConversion = key => !(canPassAsIs(key) && validKeyRgx.test(key));\nconst isNested = value => value && typeof value === 'object';\nconst setNestedWraps = (value, pre, post) => {\n  value.pre = pre;\n  value.post = post;\n};\nconst getNestedWraps = ({\n  pre,\n  post\n}) => ({\n  pre,\n  post\n});\nconst setNestedShortContent = (value, short) => {\n  value.short = short;\n};\nconst getNestedShortContent = value => value.short;\nconst isList = target => isNested(target) && target.type === 'list';\nconst createList = () => ({\n  type: 'list',\n  values: [],\n  pre: '[',\n  post: ']'\n});\nconst addToList = ({\n  values\n}, index, value) => values[index] = value;\nconst iterateList = ({\n  values\n}, handler) => values.forEach((value, index) => handler(value, index));\nconst getListSize = ({\n  values\n}) => values.length;\nconst isStorage = target => isNested(value) && target.type === 'storage';\nconst createStorage = () => ({\n  type: 'storage',\n  keys: [],\n  values: [],\n  pre: '{',\n  post: '}'\n});\nconst addToStorage = ({\n  keys,\n  values\n}, key, value) => {\n  keys.push(key);\n  values.push(value);\n};\nconst iterateStorage = (storage, handler) => {\n  const {\n    keys,\n    values\n  } = storage;\n  keys.forEach((key, index) => handler(values[index], key));\n};\nconst getStorageSize = ({\n  keys\n}) => keys.length;\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MAX_FUNC_STR_LEN: MAX_FUNC_STR_LEN,\n  addToList: addToList,\n  addToStorage: addToStorage,\n  canPassAsIs: canPassAsIs,\n  createList: createList,\n  createStorage: createStorage,\n  getCustomClassNameFrom: getCustomClassNameFrom,\n  getListSize: getListSize,\n  getNestedShortContent: getNestedShortContent,\n  getNestedWraps: getNestedWraps,\n  getStorageSize: getStorageSize,\n  isList: isList,\n  isNested: isNested,\n  isStorage: isStorage,\n  iterateList: iterateList,\n  iterateStorage: iterateStorage,\n  keyNeedsConversion: keyNeedsConversion,\n  setCustomClassNameTo: setCustomClassNameTo,\n  setNestedShortContent: setNestedShortContent,\n  setNestedWraps: setNestedWraps\n});\n\nvar convertArray = ((value, convertValue) => {\n  const result = createList();\n  value.forEach((item, index) => {\n    addToList(result, index, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertBoolean = (value => `${value}`);\n\nvar convertDate = (value => `Date(${value})`);\n\nvar convertError = ((value, convertValue) => {\n  const {\n    name,\n    message,\n    columnNumber,\n    fileName,\n    lineNumber\n  } = value;\n  const result = createStorage();\n  addToStorage(result, 'name', convertValue(name));\n  addToStorage(result, 'message', convertValue(message));\n  addToStorage(result, 'columnNumber', convertValue(columnNumber));\n  addToStorage(result, 'fileName', convertValue(fileName));\n  addToStorage(result, 'lineNumber', convertValue(lineNumber));\n  setCustomClassNameTo(result, name || 'Error');\n  return result;\n});\n\nvar convertFunction = (value => {\n  const content = String(value);\n\n  if (content.length <= MAX_FUNC_STR_LEN) {\n    return content;\n  }\n\n  const type = getClass.getClassName(value) || 'Function';\n  let {\n    name\n  } = value;\n\n  if (!name) {\n    name = content.replace(/\\s+/g, ' ').substr(content.substr(0, 9) === 'function ' ? 9 : 0, MAX_FUNC_STR_LEN);\n\n    if (content.length < MAX_FUNC_STR_LEN) {\n      name = `${name}...`;\n    }\n  }\n\n  const result = createStorage();\n  addToStorage(result, 'code', content);\n  setNestedWraps(result, '(', ')');\n  setNestedShortContent(result, name);\n  setCustomClassNameTo(result, type);\n  return result;\n});\n\nvar convertMap = ((value, convertValue) => {\n  const result = createStorage();\n  value.forEach((item, key) => {\n    /*\n    Do not use keyNeedsConversion() here, because Map may hold values of\n    different types as keys and string should be quoted, otherwise it may be\n    unclear -- what you see string true or boolean true as key.\n    */\n    addToStorage(result, convertValue(key), convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertNumber = (value => `${value}`);\n\nvar convertObject = ((value, convertValue) => {\n  const result = createStorage();\n  Object.keys(value).forEach(key => {\n    try {\n      addToStorage(result, keyNeedsConversion(key) ? convertValue(key) : key, convertValue(value[key]));\n    } catch (error) {\n      /* Possible SecurityError when accessing properties from restricted origin */\n    }\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertSet = ((value, convertValue) => {\n  const result = createList(); // remove need in indexes for Set\n\n  let index = 0;\n  value.forEach(item => {\n    addToList(result, index++, convertValue(item));\n  });\n  setCustomClassNameTo(result, getClass.getClassName(value));\n  return result;\n});\n\nvar convertString = (value => JSON.stringify(value));\n\nvar convertSymbol = (value => String(value));\n\n// use Map to store handlers for every type in this case every\n// handler could be replaced and customizable\n\nconst types = new Map();\n/**\n * Type handler signature func(value:*, convertType:(value:*)): String|Array|Object;\n * @param {*} constructor\n * @param {*} handler\n */\n\nconst addTypeHandler = (constructor, handler) => {\n  if (constructor && handler) {\n    types.delete(constructor);\n    types.set(constructor, handler);\n  }\n};\nconst hasTypeHandler = constructor => types.has(constructor);\nconst getTypeHandler = constructor => types.get(constructor);\nconst removeTypeHandler = constructor => types.delete(constructor);\nconst defaultTypeHandlerSelector = value => {\n  const type = getClass.getClass(value);\n  return type && getTypeHandler(type);\n};\nlet typeHandlerSelector = defaultTypeHandlerSelector;\n/*\n * Used to get type handler instead of getTypeHandler(), can be customized.\n * @param {*} value\n */\n\nconst selectTypeHandler = value => typeHandlerSelector(value);\n/**\n * Used to customize type selection algorythm, by default it just gets current\n * constructor value and looks for its handler.\n * @param {*} newSelector\n */\n\nconst setTypeHandlerSelector = newSelector => {\n  typeHandlerSelector = newSelector;\n};\naddTypeHandler(Array, convertArray);\naddTypeHandler(Boolean, convertBoolean);\naddTypeHandler(Date, convertDate);\naddTypeHandler(Error, convertError);\naddTypeHandler(Function, convertFunction);\naddTypeHandler(Map, convertMap);\naddTypeHandler(Number, convertNumber);\naddTypeHandler(Object, convertObject);\naddTypeHandler(Set, convertSet);\naddTypeHandler(String, convertString);\naddTypeHandler(Symbol, convertSymbol);\n\nconst {\n  get: getMaxNesingDepth,\n  set: setMaxNesingDepth\n} = closureValue.singleValueFactory(2);\n\nconst isString = value => {\n  switch (typeof value) {\n    case 'symbol':\n    case 'string':\n    case 'boolean':\n    case 'number':\n    case 'undefined':\n      return true;\n\n    default:\n      return value === null || value instanceof Date;\n  }\n};\nconst toString = value => {\n  switch (typeof value) {\n    case 'symbol':\n      return convertSymbol(value);\n\n    case 'string':\n      return convertString(value);\n\n    case 'boolean':\n      return convertBoolean(value);\n\n    case 'number':\n      return convertNumber(value);\n\n    default:\n      if (value instanceof Date) {\n        return convertDate(value);\n      }\n\n      try {\n        return `${value}`;\n      } catch (error) {\n        return '[object Non-Serializable]';\n      }\n\n  }\n};\n\nconst fallbackConversion = (value, convertValue, refs) => {\n  if (isString(value)) {\n    return toString(value);\n  }\n\n  if (value instanceof Function) {\n    return convertFunction(value);\n  }\n\n  if (value instanceof Error) {\n    return convertError(value, convertValue);\n  }\n\n  if (value instanceof Map) {\n    return convertMap(value, convertValue);\n  }\n\n  if (value instanceof Set) {\n    return convertSet(value, convertValue);\n  }\n\n  if (value instanceof Array) {\n    return convertArray(value, convertValue);\n  }\n\n  return convertObject(value, convertValue);\n};\n\nconst convert = (value, level = 1, refs = new Map()) => {\n  if (value === null || value === undefined) {\n    return `${value}`;\n  }\n\n  const maxLevel = getMaxNesingDepth();\n\n  if (level > maxLevel) {\n    return toString(value);\n  }\n\n  const complex = !isString(value);\n\n  if (complex && refs.has(value)) {\n    return refs.get(value);\n  }\n\n  const handler = selectTypeHandler(value);\n\n  const nextConvert = propValue => convert(propValue, level + 1, refs);\n\n  const result = handler ? handler(value, nextConvert, refs) : fallbackConversion(value, nextConvert);\n\n  if (complex) {\n    refs.set(value, result);\n  }\n\n  return result;\n};\n\nexports.addTypeHandler = addTypeHandler;\nexports.convert = convert;\nexports.default = convert;\nexports.getMaxNesingDepth = getMaxNesingDepth;\nexports.getTypeHandler = getTypeHandler;\nexports.hasTypeHandler = hasTypeHandler;\nexports.isString = isString;\nexports.removeTypeHandler = removeTypeHandler;\nexports.setMaxNesingDepth = setMaxNesingDepth;\nexports.setTypeHandlerSelector = setTypeHandlerSelector;\nexports.toString = toString;\nexports.utils = utils;\n//# sourceMappingURL=index.js.map\n","import { utils } from '@actualwave/log-data-renderer';\n\nconst { isList, getListSize, getNestedWraps, getCustomClassNameFrom } = utils;\n\nexport const SPACE_LEVEL = '  ';\n\nexport const INFO_TYPE = 'info';\nexport const LOG_TYPE = 'log';\nexport const WARNING_TYPE = 'warning';\nexport const ERROR_TYPE = 'error';\nexport const SUCCESS_TYPE = 'success';\n\nexport const getStringWrap = (value) => {\n  const wraps = getNestedWraps(value);\n\n  const name = getCustomClassNameFrom(value);\n\n  if (isList(value)) {\n    wraps.pre = `${name}(${getListSize(value)})${wraps.pre}`;\n  } else {\n    wraps.pre = `${name}${wraps.pre}`;\n  }\n\n  return wraps;\n};\n\nexport const removeAllChildren = (target) => {\n  while (target.firstChild) {\n    target.removeChild(target.firstChild);\n  }\n};\n","/* eslint-disable no-use-before-define */\nimport { utils } from '@actualwave/log-data-renderer';\nimport { SPACE_LEVEL, getStringWrap, removeAllChildren } from './utils';\n\nconst {\n  iterateStorage,\n  isNested,\n  isList,\n  iterateList,\n  getNestedShortContent,\n  getNestedWraps,\n  getListSize,\n  getStorageSize,\n} = utils;\n\nconst setExpandIconSymbol = (icon, expanded) => {\n  icon.innerHTML = expanded ? '-' : '+';\n};\n\nconst createExpandIcon = (expanded) => {\n  const icon = document.createElement('span');\n  icon.className = 'ui-console-button-expand';\n\n  setExpandIconSymbol(icon, expanded);\n\n  return icon;\n};\n\nconst createCollapsedContent = (value, size) => {\n  let content = getNestedShortContent(value);\n\n  if (content === undefined) {\n    content = size ? ' ... ' : '';\n  }\n\n  return [document.createTextNode(content)];\n};\n\nconst createUINestedArrayContent = (list, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateList(list, (value) => {\n    text += space;\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      text = '';\n      result.push(createUINested(value, space));\n    } else {\n      text += value;\n    }\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedObjectContent = (storage, space) => {\n  const result = [];\n  let text = '\\n';\n\n  iterateStorage(storage, (value, key) => {\n    text += `${space}`;\n\n    if (isNested(key)) {\n      result.push(document.createTextNode(`${text}[`));\n      result.push(createUINested(key, space));\n      text = ']';\n    } else {\n      text += key;\n    }\n\n    text += ': ';\n\n    if (isNested(value)) {\n      result.push(document.createTextNode(text));\n      result.push(createUINested(value, space));\n      text = '';\n    } else {\n      text += value;\n    }\n\n    text += ', \\n';\n  });\n\n  if (text) {\n    result.push(document.createTextNode(text));\n  }\n\n  return result;\n};\n\nconst createUINestedContent = (value, initSpace) => {\n  const space = `${SPACE_LEVEL}${initSpace}`;\n\n  if (isList(value)) {\n    return createUINestedArrayContent(value, space);\n  }\n\n  return createUINestedObjectContent(value, space);\n};\n\nexport function createUINested(value, space = '', initExpanded = false) {\n  const size = isList(value) ? getListSize(value) : getStorageSize(value);\n  let expanded = initExpanded && !!size;\n  let contentExpanded;\n  const contentCollapsed = createCollapsedContent(value, size);\n  const { pre, post } = getStringWrap(value);\n  const icon = createExpandIcon(expanded);\n  const wrapper = document.createElement('span');\n\n  wrapper.className = 'ui-console-nested-wrapper';\n\n  const link = document.createElement('span');\n  link.className = 'ui-console-clickable';\n  link.appendChild(icon);\n  link.appendChild(document.createTextNode(pre));\n\n  const drawContents = () => {\n    let content;\n\n    removeAllChildren(wrapper);\n\n    wrapper.appendChild(link);\n\n    if (expanded) {\n      if (!contentExpanded) {\n        contentExpanded = createUINestedContent(value, space);\n      }\n\n      content = contentExpanded;\n    } else {\n      content = contentCollapsed;\n    }\n\n    content.forEach((node) => wrapper.appendChild(node));\n\n    wrapper.appendChild(\n      document.createTextNode(expanded ? `${space}${post}` : post),\n    );\n  };\n\n  link.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    expanded = !expanded;\n\n    setExpandIconSymbol(icon, expanded);\n    drawContents();\n  });\n\n  drawContents();\n\n  return wrapper;\n}\n","\nimport convert, { utils } from '@actualwave/log-data-renderer';\nimport { createUINested } from './nested';\n\nconst { isNested, canPassAsIs } = utils;\n\nconst createSimpleValue = (value) => document.createTextNode(`${value} `);\n\nexport const buildContent = (content, item, converted = false) => {\n  content.forEach((value) => {\n    if (!converted && canPassAsIs(value)) {\n      // shortcut for log strings to not wrap them with quotes\n      item.appendChild(createSimpleValue(value));\n      return;\n    }\n\n    const result = converted ? value : convert(value);\n\n    if (isNested(result)) {\n      item.appendChild(createUINested(result, '', true));\n    } else {\n      item.appendChild(createSimpleValue(result));\n    }\n  });\n\n  return item;\n};\n","import {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n} from '@actualwave/log-data-renderer';\n\nimport {\n  INFO_TYPE,\n  LOG_TYPE,\n  WARNING_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE,\n} from './utils';\n\nimport { buildContent } from './dom';\n\nexport const init = (container, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const shiftOverMax = () => {\n    while (maxItems > 0 && maxItems < container.childElementCount) {\n      const child = container.firstElementChild;\n\n      if (!child) {\n        return;\n      }\n\n      child.remove();\n    }\n  };\n\n  const pushItem = (content, type = LOG_TYPE, converted = false) => {\n    const item = document.createElement('div');\n    item.className = `ui-console-item ui-console-item-${type}`;\n\n    buildContent(content, item, converted);\n\n    container.appendChild(item);\n    shiftOverMax();\n  };\n\n  return {\n    info: (...content) => pushItem(content, INFO_TYPE),\n    log: (...content) => pushItem(content, LOG_TYPE),\n    warn: (...content) => pushItem(content, WARNING_TYPE),\n    error: (...content) => pushItem(content, ERROR_TYPE),\n    success: (...content) => pushItem(content, SUCCESS_TYPE),\n    push: (type, ...content) => pushItem(content, type),\n    pushRendered: (type, ...content) => pushItem(content, type, true),\n    clear: () => {\n      container.innerHTML = '';\n    },\n  };\n};\n\nexport const create = (wrapper, maxItems = Number.MAX_SAFE_INTEGER) => {\n  const container = document.createElement('div');\n  container.className = 'ui-console ui-console-container';\n  wrapper.appendChild(container);\n\n  return init(container, maxItems);\n};\n\n/*\nCustomizable type representation\n */\nexport {\n  addTypeHandler,\n  getTypeHandler,\n  hasTypeHandler,\n  removeTypeHandler,\n  setTypeHandlerSelector,\n  getMaxNesingDepth,\n  setMaxNesingDepth,\n};\n"],"names":["Object","defineProperty","exports","value","getClass","target","constructor","proto","getPrototypeOf","getClassName","valueClass","name","getParentClass","def","default","singleValueFactory","defaultValue","valueFormatter","getDefault","get","set","newValue","valuesMapFactory","defaults","Map","key","defaultValues","values","copy","delete","has","valuesSetFactory","Set","add","setCustomClassNameTo","data","className","canPassAsIs","validKeyRgx","keyNeedsConversion","test","isNested","setNestedWraps","pre","post","setNestedShortContent","short","createList","type","addToList","index","createStorage","keys","addToStorage","push","utils","freeze","__proto__","MAX_FUNC_STR_LEN","getCustomClassNameFrom","getListSize","length","getNestedShortContent","getNestedWraps","getStorageSize","isList","isStorage","iterateList","handler","forEach","iterateStorage","storage","convertArray","convertValue","result","item","convertBoolean","convertDate","convertError","message","columnNumber","fileName","lineNumber","convertFunction","content","String","replace","substr","convertMap","convertNumber","convertObject","error","convertSet","convertString","JSON","stringify","convertSymbol","types","addTypeHandler","getTypeHandler","typeHandlerSelector","Array","Boolean","Date","Error","Function","Number","Symbol","getMaxNesingDepth","setMaxNesingDepth","closureValue","isString","toString","convert","level","refs","maxLevel","complex","selectTypeHandler","nextConvert","propValue","fallbackConversion","hasTypeHandler","removeTypeHandler","setTypeHandlerSelector","newSelector","setExpandIconSymbol","icon","expanded","innerHTML","createUINestedContent","initSpace","space","createUINestedArrayContent","list","text","document","createTextNode","createUINested","createUINestedObjectContent","initExpanded","size","contentExpanded","contentCollapsed","createCollapsedContent","undefined","wraps","getStringWrap","createElement","createExpandIcon","wrapper","link","appendChild","drawContents","firstChild","removeChild","removeAllChildren","node","addEventListener","event","preventDefault","stopPropagation","createSimpleValue","init","container","maxItems","MAX_SAFE_INTEGER","pushItem","converted","buildContent","shiftOverMax","childElementCount","child","firstElementChild","remove","info","log","warn","success","pushRendered","clear","create"],"mappings":"ykBAEAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAEtD,MAAMC,EAAYC,IAChB,GAAGA,QACD,OAGF,MAAMC,EAAcD,EAAOC,YAE3B,GACyB,mBAAhBA,GACJD,aAAkBC,EAErB,OAAOD,EAAOC,YAGhB,MAAMC,EAAQP,OAAOQ,eAAeH,GAEpC,OAAIE,GAA0B,iBAAVA,EACXA,EAAMD,YAGRC,GAASP,MAAM,EAiBxBE,EAAoBO,aAREN,IACpB,IAAKA,EAAO,MAAO,GAEnB,MAAMO,EAAaN,EAASD,GAE5B,OAAOO,EAAaA,EAAWC,KAAO,EAAE,EAI1CT,EAAsBU,eAfEP,IACtB,MAAMQ,EAAMT,EAASC,GAErB,OAAOQ,GAAOb,OAAOQ,eAAeK,EAAI,EAa1CX,EAAgBE,SAAGA,EACnBF,EAAAY,QAAkBV,wBC1ClBJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IA+CtDD,EAA0Ba,mBA7CC,CAACC,EAAe,KAAMC,EAAiB,CAACd,GAAUA,MAC3E,IAAIA,EAAQa,EAEZ,MAAO,CACLE,WAAY,IAAMF,EAClBG,IAAK,IAAMhB,EACXiB,IAAK,CAACC,EAAWL,KACfb,EAAQc,EAAeI,EAAS,EAEnC,EAqCHnB,EAAwBoB,iBAlCC,CAACC,EAAW,IAAIC,IAAOP,EAAiB,EAACQ,EAAKtB,IAAUA,MAC/E,MAAMuB,EAAgB,IAAIF,IAAID,GACxBL,EAAa,IAAM,IAAIM,IAAIE,GAE3BC,EAAST,IAEf,MAAO,CACLS,SACAT,aACAU,KAAM,IAAM,IAAIJ,IAAIG,GACpBE,OAASJ,GAAQE,EAAOE,OAAOJ,GAC/BK,IAAML,GAAQE,EAAOG,IAAIL,GACzBL,IAAK,CAACK,EAAKtB,IAAUwB,EAAOP,IAAIK,EAAKR,EAAeQ,EAAKtB,IACzDgB,IAAMM,GAAQE,EAAOR,IAAIM,GAC1B,EAqBHvB,EAAA6B,iBAlByB,CAACR,EAAW,IAAIS,IAAOf,EAAiB,CAACd,GAAUA,MAC1E,MAAMuB,EAAgB,IAAIM,IAAIT,GACxBL,EAAa,IAAM,IAAIc,IAAIN,GAE3BC,EAAST,IAEf,MAAO,CACLS,SACAT,aACAC,IAAK,IAAM,IAAIa,IAAIL,GACnBE,OAAS1B,GAAUwB,EAAOE,OAAO1B,GACjC2B,IAAM3B,GAAUwB,EAAOG,IAAI3B,GAC3B8B,IAAM9B,GAAUwB,EAAOM,IAAIhB,EAAed,IAC3C,wBC5CHH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IAOtD,MACM+B,EAAuB,CAACC,EAAMC,IAAcD,EAAKC,UAAYA,EAE7DC,EAAclC,GAA0B,iBAAVA,EAC9BmC,EAAc,qBACdC,EAAqBd,KAASY,EAAYZ,IAAQa,EAAYE,KAAKf,IACnEgB,EAAWtC,GAASA,GAA0B,iBAAVA,EACpCuC,EAAiB,CAACvC,EAAOwC,EAAKC,KAClCzC,EAAMwC,IAAMA,EACZxC,EAAMyC,KAAOA,CAAI,EASbC,EAAwB,CAAC1C,EAAO2C,KACpC3C,EAAM2C,MAAQA,CAAK,EAIfC,EAAa,KAAO,CACxBC,KAAM,OACNrB,OAAQ,GACRgB,IAAK,IACLC,KAAM,MAEFK,EAAY,EAChBtB,UACCuB,EAAO/C,IAAUwB,EAAOuB,GAAS/C,EAQ9BgD,EAAgB,KAAO,CAC3BH,KAAM,UACNI,KAAM,GACNzB,OAAQ,GACRgB,IAAK,IACLC,KAAM,MAEFS,EAAe,EACnBD,OACAzB,UACCF,EAAKtB,KACNiD,EAAKE,KAAK7B,GACVE,EAAO2B,KAAKnD,EAAM,EAapB,IAAIoD,EAAqBvD,OAAOwD,OAAO,CACrCC,UAAW,KACXC,iBAlEuB,GAmEvBT,UAAWA,EACXI,aAAcA,EACdhB,YAAaA,EACbU,WAAYA,EACZI,cAAeA,EACfQ,uBAtE6BxB,GAAQA,EAAKC,WAAa,GAuEvDwB,YAtCkB,EAClBjC,YACIA,EAAOkC,OAqCXC,sBArD4B3D,GAASA,EAAM2C,MAsD3CiB,eAhEqB,EACrBpB,MACAC,WACK,CACLD,MACAC,SA4DAoB,eAhBqB,EACrBZ,UACIA,EAAKS,OAeTI,OAvDa5D,GAAUoC,EAASpC,IAA2B,SAAhBA,EAAO2C,KAwDlDP,SAAUA,EACVyB,UAzCgB7D,GAAUoC,EAAStC,QAA0B,YAAhBE,EAAO2C,KA0CpDmB,YAhDkB,EAClBxC,UACCyC,IAAYzC,EAAO0C,SAAQ,CAAClE,EAAO+C,IAAUkB,EAAQjE,EAAO+C,KA+C7DoB,eA5BqB,CAACC,EAASH,KAC/B,MAAMhB,KACJA,EAAIzB,OACJA,GACE4C,EACJnB,EAAKiB,SAAQ,CAAC5C,EAAKyB,IAAUkB,EAAQzC,EAAOuB,GAAQzB,IAAK,EAwBzDc,mBAAoBA,EACpBL,qBAAsBA,EACtBW,sBAAuBA,EACvBH,eAAgBA,IAGd8B,EAAgB,CAACrE,EAAOsE,KAC1B,MAAMC,EAlEkB,CACxB1B,KAAM,OACNrB,OAAQ,GACRgB,IAAK,IACLC,KAAM,KAmEN,OAJAzC,EAAMkE,SAAQ,CAACM,EAAMzB,KACnBD,EAAUyB,EAAQxB,EAAOuB,EAAaE,GAAM,IAE9CzC,EAAqBwC,EAAQtE,EAASK,aAAaN,IAC5CuE,CACR,EAEGE,EAAkBzE,GAAS,GAAGA,IAE9B0E,EAAe1E,GAAS,QAAQA,KAEhC2E,EAAgB,CAAC3E,EAAOsE,KAC1B,MAAM9D,KACJA,EAAIoE,QACJA,EAAOC,aACPA,EAAYC,SACZA,EAAQC,WACRA,GACE/E,EACEuE,EAtEqB,CAC3B1B,KAAM,UACNI,KAAM,GACNzB,OAAQ,GACRgB,IAAK,IACLC,KAAM,KAwEN,OANAS,EAAaqB,EAAQ,OAAQD,EAAa9D,IAC1C0C,EAAaqB,EAAQ,UAAWD,EAAaM,IAC7C1B,EAAaqB,EAAQ,eAAgBD,EAAaO,IAClD3B,EAAaqB,EAAQ,WAAYD,EAAaQ,IAC9C5B,EAAaqB,EAAQ,aAAcD,EAAaS,IAChDhD,EAAqBwC,EAAQ/D,GAAQ,SAC9B+D,CACR,EAEGS,EAAmBhF,IACrB,MAAMiF,EAAUC,OAAOlF,GAEvB,GAAIiF,EAAQvB,QA1HW,GA2HrB,OAAOuB,EAGT,MAAMpC,EAAO5C,EAASK,aAAaN,IAAU,WAC7C,IAAIQ,KACFA,GACER,EAECQ,IACHA,EAAOyE,EAAQE,QAAQ,OAAQ,KAAKC,OAAgC,cAAzBH,EAAQG,OAAO,EAAG,GAAqB,EAAI,EApIjE,IAsIjBH,EAAQvB,OAtIS,KAuInBlD,EAAO,GAAGA,SAId,MAAM+D,EApGqB,CAC3B1B,KAAM,UACNI,KAAM,GACNzB,OAAQ,GACRgB,IAAK,IACLC,KAAM,KAoGN,OAJAS,EAAaqB,EAAQ,OAAQU,GAC7B1C,EAAegC,EAAQ,IAAK,KAC5B7B,EAAsB6B,EAAQ/D,GAC9BuB,EAAqBwC,EAAQ1B,GACtB0B,CACR,EAEGc,EAAc,CAACrF,EAAOsE,KACxB,MAAMC,EA7GqB,CAC3B1B,KAAM,UACNI,KAAM,GACNzB,OAAQ,GACRgB,IAAK,IACLC,KAAM,KAkHN,OATAzC,EAAMkE,SAAQ,CAACM,EAAMlD,KAMnB4B,EAAaqB,EAAQD,EAAahD,GAAMgD,EAAaE,GAAM,IAE7DzC,EAAqBwC,EAAQtE,EAASK,aAAaN,IAC5CuE,CACR,EAEGe,EAAiBtF,GAAS,GAAGA,IAE7BuF,EAAiB,CAACvF,EAAOsE,KAC3B,MAAMC,EA7HqB,CAC3B1B,KAAM,UACNI,KAAM,GACNzB,OAAQ,GACRgB,IAAK,IACLC,KAAM,KAiIN,OARA5C,OAAOoD,KAAKjD,GAAOkE,SAAQ5C,IACzB,IACE4B,EAAaqB,EAAQnC,EAAmBd,GAAOgD,EAAahD,GAAOA,EAAKgD,EAAatE,EAAMsB,IAC5F,CAAC,MAAOkE,GAER,KAEHzD,EAAqBwC,EAAQtE,EAASK,aAAaN,IAC5CuE,CACR,EAEGkB,EAAc,CAACzF,EAAOsE,KACxB,MAAMC,EA1JkB,CACxB1B,KAAM,OACNrB,OAAQ,GACRgB,IAAK,IACLC,KAAM,KAwJN,IAAIM,EAAQ,EAKZ,OAJA/C,EAAMkE,SAAQM,IACZ1B,EAAUyB,EAAQxB,IAASuB,EAAaE,GAAM,IAEhDzC,EAAqBwC,EAAQtE,EAASK,aAAaN,IAC5CuE,CACR,EAEGmB,EAAiB1F,GAAS2F,KAAKC,UAAU5F,GAEzC6F,EAAiB7F,GAASkF,OAAOlF,GAKrC,MAAM8F,EAAQ,IAAIzE,IAOZ0E,EAAiB,CAAC5F,EAAa8D,KAC/B9D,GAAe8D,IACjB6B,EAAMpE,OAAOvB,GACb2F,EAAM7E,IAAId,EAAa8D,GACxB,EAGG+B,EAAiB7F,GAAe2F,EAAM9E,IAAIb,GAMhD,IAAI8F,EAJ+BjG,IACjC,MAAM6C,EAAO5C,EAASA,SAASD,GAC/B,OAAO6C,GAAQmD,EAAenD,EAAK,EAkBrCkD,EAAeG,MAAO7B,GACtB0B,EAAeI,QAAS1B,GACxBsB,EAAeK,KAAM1B,GACrBqB,EAAeM,MAAO1B,GACtBoB,EAAeO,SAAUtB,GACzBe,EAAe1E,IAAKgE,GACpBU,EAAeQ,OAAQjB,GACvBS,EAAelG,OAAQ0F,GACvBQ,EAAelE,IAAK4D,GACpBM,EAAeb,OAAQQ,GACvBK,EAAeS,OAAQX,GAEvB,MACE7E,IAAKyF,EACLxF,IAAKyF,GACHC,EAAa/F,mBAAmB,GAE9BgG,EAAW5G,IACf,cAAeA,GACb,IAAK,SACL,IAAK,SACL,IAAK,UACL,IAAK,SACL,IAAK,YACH,OAAO,EAET,QACE,OAAiB,OAAVA,GAAkBA,aAAiBoG,KAC7C,EAEGS,EAAW7G,IACf,cAAeA,GACb,IAAK,SACH,OAAO6F,EAAc7F,GAEvB,IAAK,SACH,OAAO0F,EAAc1F,GAEvB,IAAK,UACH,OAAOyE,EAAezE,GAExB,IAAK,SACH,OAAOsF,EAActF,GAEvB,QACE,GAAIA,aAAiBoG,KACnB,OAAO1B,EAAY1E,GAGrB,IACE,MAAO,GAAGA,GACX,CAAC,MAAOwF,GACP,MAAO,2BACR,EAEJ,EA+BGsB,EAAU,CAAC9G,EAAO+G,EAAQ,EAAGC,EAAO,IAAI3F,OAC5C,GAAIrB,QACF,MAAO,GAAGA,IAGZ,MAAMiH,EAAWR,IAEjB,GAAIM,EAAQE,EACV,OAAOJ,EAAS7G,GAGlB,MAAMkH,GAAWN,EAAS5G,GAE1B,GAAIkH,GAAWF,EAAKrF,IAAI3B,GACtB,OAAOgH,EAAKhG,IAAIhB,GAGlB,MAAMiE,EAjHkBjE,IAASiG,EAAoBjG,GAiHrCmH,CAAkBnH,GAE5BoH,EAAcC,GAAaP,EAAQO,EAAWN,EAAQ,EAAGC,GAEzDzC,EAASN,EAAUA,EAAQjE,EAAOoH,EAAaJ,GAjD5B,EAAChH,EAAOsE,EAAc0C,IAC3CJ,EAAS5G,GACJ6G,EAAS7G,GAGdA,aAAiBsG,SACZtB,EAAgBhF,GAGrBA,aAAiBqG,MACZ1B,EAAa3E,EAAOsE,GAGzBtE,aAAiBqB,IACZgE,EAAWrF,EAAOsE,GAGvBtE,aAAiB6B,IACZ4D,EAAWzF,EAAOsE,GAGvBtE,aAAiBkG,MACZ7B,EAAarE,EAAOsE,GAGtBiB,EAAcvF,EAAOsE,GAwBiCgD,CAAmBtH,EAAOoH,GAMvF,OAJIF,GACFF,EAAK/F,IAAIjB,EAAOuE,GAGXA,CAAM,EAGfxE,EAAsBgG,eAAGA,EACzBhG,EAAe+G,QAAGA,EAClB/G,EAAeY,QAAGmG,EAClB/G,EAAyB0G,kBAAGA,EAC5B1G,EAAsBiG,eAAGA,EACzBjG,EAAsBwH,eAhJCpH,GAAe2F,EAAMnE,IAAIxB,GAiJhDJ,EAAgB6G,SAAGA,EACnB7G,EAAyByH,kBAhJCrH,GAAe2F,EAAMpE,OAAOvB,GAiJtDJ,EAAyB2G,kBAAGA,EAC5B3G,EAA8B0H,uBAhICC,IAC7BzB,EAAsByB,CAAW,EAgInC3H,EAAgB8G,SAAGA,EACnB9G,EAAaqD,MAAGA,YC5WhB,aAAQU,cAAQL,iBAAaG,EAAcJ,uBAAEA,GAA2BJ,SCElEe,eACJA,WACA7B,EAAQwB,OACRA,EAAME,YACNA,EAAWL,sBACXA,EAAqBC,eACrBA,EAAcH,YACdA,EAAWI,eACXA,GACET,QAEEuE,EAAsBA,CAACC,EAAMC,KACjCD,EAAKE,UAAYD,EAAW,IAAM,GAAG,EAiFjCE,EAAwBA,CAAC/H,EAAOgI,KACpC,MAAMC,EAAS,KAAgBD,IAE/B,OAAIlE,EAAO9D,GA9DsBkI,EAACC,EAAMF,KACxC,MAAM1D,EAAS,GACf,IAAI6D,EAAO,KAmBX,OAjBApE,EAAYmE,GAAOnI,IACjBoI,GAAQH,EAEJ3F,EAAStC,IACXuE,EAAOpB,KAAKkF,SAASC,eAAeF,IACpCA,EAAO,GACP7D,EAAOpB,KAAKoF,EAAevI,EAAOiI,KAElCG,GAAQpI,EAEVoI,GAAQ,MAAM,IAGZA,GACF7D,EAAOpB,KAAKkF,SAASC,eAAeF,IAG/B7D,CAAM,EA0CJ2D,CAA2BlI,EAAOiI,GAvCTO,EAACpE,EAAS6D,KAC5C,MAAM1D,EAAS,GACf,IAAI6D,EAAO,KA8BX,OA5BAjE,EAAeC,GAAS,CAACpE,EAAOsB,KAC9B8G,GAAS,GAAEH,IAEP3F,EAAShB,IACXiD,EAAOpB,KAAKkF,SAASC,eAAgB,GAAEF,OACvC7D,EAAOpB,KAAKoF,EAAejH,EAAK2G,IAChCG,EAAO,KAEPA,GAAQ9G,EAGV8G,GAAQ,KAEJ9F,EAAStC,IACXuE,EAAOpB,KAAKkF,SAASC,eAAeF,IACpC7D,EAAOpB,KAAKoF,EAAevI,EAAOiI,IAClCG,EAAO,IAEPA,GAAQpI,EAGVoI,GAAQ,MAAM,IAGZA,GACF7D,EAAOpB,KAAKkF,SAASC,eAAeF,IAG/B7D,CAAM,EAUNiE,CAA4BxI,EAAOiI,EAAM,EAG3C,SAASM,EAAevI,EAAOiI,EAAQ,GAAIQ,GAAe,GAC/D,MAAMC,EAAO5E,EAAO9D,GAASyD,EAAYzD,GAAS6D,EAAe7D,GACjE,IACI2I,EADAd,EAAWY,KAAkBC,EAEjC,MAAME,EAnFuBC,EAAC7I,EAAO0I,KACrC,IAAIzD,EAAUtB,EAAsB3D,GAMpC,YAJgB8I,IAAZ7D,IACFA,EAAUyD,EAAO,QAAU,IAGtB,CAACL,SAASC,eAAerD,GAAS,EA4EhB4D,CAAuB7I,EAAO0I,IACjDlG,IAAEA,EAAGC,KAAEA,GDpGezC,KAC5B,MAAM+I,EAAQnF,EAAe5D,GAEvBQ,EAAOgD,EAAuBxD,GAQpC,OANI8D,EAAO9D,GACT+I,EAAMvG,IAAO,GAAEhC,KAAQiD,EAAYzD,MAAU+I,EAAMvG,MAEnDuG,EAAMvG,IAAO,GAAEhC,IAAOuI,EAAMvG,MAGvBuG,CAAK,ECyFUC,CAAchJ,GAC9B4H,EA9FkBC,KACxB,MAAMD,EAAOS,SAASY,cAAc,QAKpC,OAJArB,EAAK3F,UAAY,2BAEjB0F,EAAoBC,EAAMC,GAEnBD,CAAI,EAwFEsB,CAAiBrB,GACxBsB,EAAUd,SAASY,cAAc,QAEvCE,EAAQlH,UAAY,4BAEpB,MAAMmH,EAAOf,SAASY,cAAc,QACpCG,EAAKnH,UAAY,uBACjBmH,EAAKC,YAAYzB,GACjBwB,EAAKC,YAAYhB,SAASC,eAAe9F,IAEzC,MAAM8G,EAAeA,KACnB,IAAIrE,EDlG0B/E,KAChC,KAAOA,EAAOqJ,YACZrJ,EAAOsJ,YAAYtJ,EAAOqJ,WAC5B,ECiGEE,CAAkBN,GAElBA,EAAQE,YAAYD,GAEhBvB,GACGc,IACHA,EAAkBZ,EAAsB/H,EAAOiI,IAGjDhD,EAAU0D,GAEV1D,EAAU2D,EAGZ3D,EAAQf,SAASwF,GAASP,EAAQE,YAAYK,KAE9CP,EAAQE,YACNhB,SAASC,eAAeT,EAAY,GAAEI,IAAQxF,IAASA,GACxD,EAeH,OAZA2G,EAAKO,iBAAiB,SAAUC,IAC9BA,EAAMC,iBACND,EAAME,kBAENjC,GAAYA,EAEZF,EAAoBC,EAAMC,GAC1ByB,GAAc,IAGhBA,IAEOH,CACT,CC5JA,MAAM7G,SAAEA,EAAQJ,YAAEA,GAAgBkB,QAE5B2G,EAAqB/J,GAAUqI,SAASC,eAAgB,GAAEtI,MCcnDgK,EAAOA,CAACC,EAAWC,EAAW3D,OAAO4D,oBAChD,MAYMC,EAAWA,CAACnF,EAASpC,EH1BL,MG0BsBwH,GAAY,KACtD,MAAM7F,EAAO6D,SAASY,cAAc,OACpCzE,EAAKvC,UAAa,mCAAkCY,ID3B5ByH,EAACrF,EAAST,EAAM6F,GAAY,KACtDpF,EAAQf,SAASlE,IACf,IAAKqK,GAAanI,EAAYlC,GAG5B,YADAwE,EAAK6E,YAAYU,EAAkB/J,IAIrC,MAAMuE,EAAS8F,EAAYrK,EAAQ8G,EAAQ9G,GAEvCsC,EAASiC,GACXC,EAAK6E,YAAYd,EAAehE,EAAQ,IAAI,IAE5CC,EAAK6E,YAAYU,EAAkBxF,GACrC,GAGS,ECYT+F,CAAarF,EAAST,EAAM6F,GAE5BJ,EAAUZ,YAAY7E,GAlBH+F,MACnB,KAAOL,EAAW,GAAKA,EAAWD,EAAUO,mBAAmB,CAC7D,MAAMC,EAAQR,EAAUS,kBAExB,IAAKD,EACH,OAGFA,EAAME,QACR,GAUAJ,EAAc,EAGhB,MAAO,CACLK,KAAMA,IAAI3F,IAAYmF,EAASnF,EHtCV,QGuCrB4F,IAAKA,IAAI5F,IAAYmF,EAASnF,EHtCV,OGuCpB6F,KAAMA,IAAI7F,IAAYmF,EAASnF,EHtCP,WGuCxBO,MAAOA,IAAIP,IAAYmF,EAASnF,EHtCV,SGuCtB8F,QAASA,IAAI9F,IAAYmF,EAASnF,EHtCV,WGuCxB9B,KAAMA,CAACN,KAASoC,IAAYmF,EAASnF,EAASpC,GAC9CmI,aAAcA,CAACnI,KAASoC,IAAYmF,EAASnF,EAASpC,GAAM,GAC5DoI,MAAOA,KACLhB,EAAUnC,UAAY,EAAE,EAE3B,6CAGmBoD,CAAC/B,EAASe,EAAW3D,OAAO4D,oBAChD,MAAMF,EAAY5B,SAASY,cAAc,OAIzC,OAHAgB,EAAUhI,UAAY,kCACtBkH,EAAQE,YAAYY,GAEbD,EAAKC,EAAWC,EAAS"}